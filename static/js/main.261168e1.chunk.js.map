{"version":3,"sources":["UserContext.js","AccessContext.js","Components/Pages/Landing/components/signUpForm.js","Components/Pages/Landing/components/signInForm.js","Components/Pages/Landing/AuthLanding.js","Components/shared/Header/Header.js","Components/shared/Layout.js","Components/shared/CreatePostDialog.js","Components/shared/CreateCommentDialog.js","Components/shared/CommentAccordion.js","Components/shared/postCard.js","Components/Pages/Dashboard/components/dashTimeline.js","Components/Pages/Dashboard/dashboard.js","Components/shared/timeline.js","Components/shared/friendButton.js","Components/Pages/Profile/components/EditProfileDialog.js","Components/Pages/Profile/components/userCard.js","Components/Pages/Profile/Profile.js","Components/Pages/UserIndex/components/UserIndexCard.js","Components/Pages/UserIndex/UserIndex.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","user","setUser","AccessContext","accessToken","setAccessToken","useStyles","makeStyles","signInContainer","textAlign","padding","margin","MyTextField","placeholder","type","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","firstName","required","max","lastName","email","password","matches","passwordConfirm","test","value","this","parent","SignUpForm","classes","Box","className","initialValues","onSubmit","data","setSubmitting","resetForm","console","log","isSubmitting","Typography","variant","name","Button","disabled","display","flexDirection","justifyContent","width","label","SignInForm","history","useHistory","useContext","useState","signUpOpen","setSignUpOpen","url","values","a","fetch","method","mode","credentials","headers","body","JSON","stringify","json","then","currUser","Object","entries","token","push","catch","handleSubmit","color","onClick","Dialog","fullWidth","open","onClose","AuthLanding","paddingTop","Paper","elevation","HeaderComponent","React","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","e","currentTarget","Menu","id","keepMounted","Boolean","MenuItem","component","Link","to","children","userurl","first_name","last_name","document","cookie","title","Layout","Header","multiline","message","min","trim","CreatePostDialog","setOpen","setRefreshInfo","refreshInfo","userId","_id","DialogContent","DialogActions","interactionButton","CreateCommentDialog","Authorization","fontSize","postComments","length","author","postId","theme","root","heading","typography","pxToRem","fontWeight","fontWeightRegular","list","listItem","avatarHover","cursor","SimpleExpansionPanel","commentsArr","setCommentsArr","useEffect","res","comments","getComments","handleDelete","commentId","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Divider","ExpansionPanelDetails","map","comment","i","List","ListItem","ListItemAvatar","Avatar","src","profileImgUrl","ListItemText","primary","secondary","authUserComments","includes","isAuthUserComment","postComponentStyles","marginBottom","border","avatarSmall","height","marginRight","posterInfo","alignItems","borderBottom","postInteractions","avatarContainer","PostCard","setDeletedPosts","deletedPosts","handleLike","setLikes","Card","postProfileUrl","profilePic","alt","paragraph","post","postLikes","postAuthorId","timelineContainer","overflow","paddingBottom","timelinePaper","backgroundColor","paddingLeft","DashTimeline","postsArr","posts","Container","maxWidth","paddingY","key","likes","reverse","DashboardComponent","setPosts","err","getPosts","Timeline","FriendButton","handleAddClick","profileUser","authUser","handleAcceptClick","handleUnfriendClick","current","pendIn","pendOut","img","refresh","imageData","FormData","append","setRefresh","container","EditProfileDialog","selection","setSelection","align","FormLabel","form","htmlFor","Input","onChange","image","target","files","userCard","marginTop","infoBox","fullName","alignSelf","ageLocation","avatarPic","friendButton","UserCard","handleEditProfileClose","friendsCurrent","friendsPendIn","friendsPendOut","age","city","state","currAge","currCity","currState","ProfileComponent","useParams","profileInfo","setProfileInfo","isLoading","setIsLoading","authId","result","getProfileInfo","undefined","disableGutters","friends","cardStyles","UserIndexCard","profileUrl","setPageUpdates","pageUpdates","UserIndexContainer","UserIndex","users","setUsers","getAllUsers","Grid","sm","spacing","justify","selected","item","App","checkLoggedIn","Provider","path","render","exact","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kWAEaA,EAAcC,wBAAc,CACvCC,KAAM,KACNC,QAAS,eCFEC,EAAgBH,wBAAc,CACzCI,YAAa,KACbC,eAAgB,e,SCEZC,EAAYC,YAAW,CAC3BC,gBAAiB,CACfC,UAAW,SACX,SAAU,CACRC,QAAS,OACT,QAAS,CACPC,OAAQ,mBAMVC,EAAc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAASC,EAAY,wCACjCC,YAASD,GADwB,mBAChDE,EADgD,KACzCC,EADyC,KAEjDC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAACE,EAAA,EAAD,iBACML,EADN,CAEEH,KAAMA,EACND,YAAaA,EACbU,WAAYJ,EACZC,QAASD,MAKTK,EAAmBC,IAAW,CAClCC,UAAWD,MAAaE,WAAWC,IAAI,IACvCC,SAAUJ,MAAaE,WAAWC,IAAI,IACtCE,MAAOL,MAAaE,WAAWG,MAAM,0BACrCC,SAAUN,MAEPE,WACAK,QACC,iEACA,oHAEJC,gBAAiBR,MAEdE,WACAO,KAAK,kBAAmB,wBAAwB,SAAUC,GACzD,OAAOC,KAAKC,OAAON,WAAaI,OAwEvBG,EApEI,WACjB,IAAMC,EAAUjC,IAChB,OACE,kBAACkC,EAAA,EAAD,CAAKC,UAAWF,EAAQ/B,iBACtB,kBAAC,IAAD,CACEkC,cAAe,CACbhB,UAAW,GACXG,SAAU,GACVC,MAAO,GACPC,SAAU,GACVE,gBAAiB,IAEnBT,iBAAkBA,EAClBmB,SAAU,SAACC,EAAD,GAAyC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChCD,GAAc,GACdE,QAAQC,IAAIJ,GACZC,GAAc,GACdC,EAAU,OAGX,gBAAGG,EAAH,EAAGA,aAAH,OACC,kBAACT,EAAA,EAAD,KACA,kBAACU,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEtC,YAAY,eACZuC,KAAK,YACLtC,KAAK,UAEP,6BACE,kBAAC,EAAD,CACED,YAAY,cACZuC,KAAK,WACLtC,KAAK,WAGT,6BACE,kBAAC,EAAD,CAAaD,YAAY,WAAWuC,KAAK,QAAQtC,KAAK,WAExD,6BACE,kBAAC,EAAD,CACED,YAAY,aACZuC,KAAK,WACLtC,KAAK,cAGT,6BACE,kBAAC,EAAD,CACED,YAAY,qBACZuC,KAAK,kBACLtC,KAAK,cAGT,6BACE,kBAACuC,EAAA,EAAD,CAAQC,SAAUL,EAAcnC,KAAK,UAArC,kBC/FRR,EAAYC,YAAW,CAC3BC,gBAAiB,CACf+C,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,MAAO,QACPjD,UAAW,SACX,SAAU,CACRC,QAAS,OACT,QAAS,CACPC,OAAQ,mBAMVC,EAAc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAASC,EAAY,wCACjCC,YAASD,GADwB,mBAChDE,EADgD,KACzCC,EADyC,KAEjDC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAACE,EAAA,EAAD,iBACML,EADN,CAEEH,KAAMA,EACNS,WAAYJ,EACZC,QAASD,EACTgC,QAAQ,WACRQ,MAAO9C,MAKPW,EAAmBC,IAAW,CAClCK,MAAOL,MAAaE,WAAWG,MAAM,0BACrCC,SAAUN,MAAaE,aAkGViC,EA/FI,WACjB,IAAMrB,EAAUjC,IACVuD,EAAUC,cACR5D,EAAY6D,qBAAWhE,GAAvBG,QACAG,EAAmB0D,qBAAW5D,GAA9BE,eAJe,EAKa2D,oBAAS,GALtB,mBAKhBC,EALgB,KAKJC,EALI,iDAevB,WAA4BC,EAAKC,GAAjC,SAAAC,EAAA,sEACyBC,MAAMH,EAAK,CAChCI,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUT,KARzB,cAWKU,OACAC,MAAK,SAACnC,GAGL,IAAIoC,EAAWC,OAAOC,QAAQtC,EAAK3C,MAAM,GAAG,GAC5C8C,QAAQC,IAAIgC,GACZ9E,EAAQ8E,GACR3E,EAAeuC,EAAKuC,OACpBtB,EAAQuB,KAAK,iBAEdC,OAAM,SAACjE,GACN,OAAO2B,QAAQ3B,MAAMA,MAtB3B,4CAfuB,sBAyCvB,OACE,kBAACoB,EAAA,EAAD,CAAKC,UAAWF,EAAQ/B,iBACtB,uCACA,kBAAC,IAAD,CACEkC,cAAe,CACbZ,MAAO,GACPC,SAAU,IAEZP,iBAAkBA,EAClBmB,SAAU,SAACC,EAAD,GAAyC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChCD,GAAc,GAnDC,sCAoDfyC,CAAa,uCAAwC1C,GACrDE,IACAD,GAAc,MAGf,gBAAGI,EAAH,EAAGA,aAAH,OACC,kBAACT,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,CAAa3B,YAAY,WAAWuC,KAAK,QAAQtC,KAAK,WAExD,6BACE,kBAAC,EAAD,CACED,YAAY,aACZuC,KAAK,WACLtC,KAAK,cAGT,kBAACuC,EAAA,EAAD,CACEkC,MAAM,UACNpC,QAAQ,YACRG,SAAUL,EACVnC,KAAK,UAJP,eAYR,2CACgB,IACd,kBAACuC,EAAA,EAAD,CAAQmC,QA7EW,WACvBtB,GAAc,IA4EyBqB,MAAM,UAAUpC,QAAQ,QAA3D,aAIF,kBAACsC,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAM1B,EAAY2B,QA7Ed,WACxB1B,GAAc,KA6ER,kBAAC,EAAD,S,SCvHK2B,EAXK,WAEhB,OACE,kBAACrD,EAAA,EAAD,CAAKsD,WAAW,OAAOvC,QAAQ,OAAOE,eAAe,UACnD,kBAACsC,EAAA,EAAD,CAAOC,UAAW,GAClB,kBAAC,EAAD,S,uECqGOC,EAhGS,WAAO,IAAD,EACIC,IAAMlC,SAAS,MADnB,mBACrBmC,EADqB,KACXC,EADW,OAGFrC,qBAAWhE,GAA7BE,EAHoB,EAGpBA,KAAMC,EAHc,EAGdA,QACNG,EAAmB0D,qBAAW5D,GAA9BE,eAMFgG,EAAc,WAClBD,EAAY,OAWd,OACE,kBAACE,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KAEGvG,EACC,oCACE,kBAACwG,EAAA,EAAD,CACEC,KAAK,QACLjE,UAAU,gBACV8C,MAAM,UACNoB,aAAW,OACXnB,QAAS,SAACoB,GA1BpBR,EA0BuCQ,EA1BrBC,iBA4BR,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACEC,GAAG,cACHZ,SAAUA,EACVa,aAAW,EACXrB,KAAMsB,QAAQd,GACdP,QAASS,GAGT,kBAACa,EAAA,EAAD,CACE3B,MAAM,cACN4B,UAAWC,IACXC,GAAG,aACH7B,QAASa,GAJX,YAQA,kBAACa,EAAA,EAAD,CACE3B,MAAM,cACN4B,UAAWC,IACXC,GAAI,aACJ7B,QAASa,GAJX,aAQA,kBAACa,EAAA,EAAD,CACE3B,MAAM,cACN4B,UAAWC,IACXE,SAAUF,IACVC,GAAE,mBAAcpH,EAAKsH,SACrB/B,QAASa,GALX,cASA,kBAACa,EAAA,EAAD,CACE3B,MAAM,cACN4B,UAAWC,IACXC,GAAE,mBAAcpH,EAAKuH,YAAnB,OAAgCvH,EAAKwH,UAArC,SACFjC,QAASa,GAJX,gBAQA,kBAACa,EAAA,EAAD,CACE3B,MAAM,cACN4B,UAAWC,IACX5B,QAnEO,WAEnBkC,SAASC,OAAS,gEAClBtH,EAAe,MACfH,EAAQ,MACRmG,MA2DU,YASF,KACJ,kBAACnD,EAAA,EAAD,CAAYC,QAAQ,KAAKoC,MAAM,WAC5BmC,SAASE,UC5FLC,EARA,WACb,OACE,6BACE,kBAACC,EAAD,Q,2BCOAlH,EAAc,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,KAAM6C,EAAiC,EAAjCA,MAAOoE,EAA0B,EAA1BA,UAAchH,EAAY,4DACnDC,YAASD,GAD0C,mBAClEE,EADkE,KAC3DC,EAD2D,KAEnEC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAACE,EAAA,EAAD,iBACML,EADN,CAEEH,KAAMA,EACNS,WAAYJ,EACZC,QAASD,EACTgC,QAAQ,WACRtC,YAAaA,EACb8C,MAAOA,EACPoE,UAAWA,MAKXvG,EAAmBC,IAAW,CAClCuG,QAASvG,MAENE,SAAS,yBACTsG,IAAI,EAAG,sCACPC,SAoFUC,EAjFU,SAACpH,GAAW,IAAD,EACViD,oBAAS,GADC,mBAC3B2B,EAD2B,KACrByC,EADqB,KAE1BnI,EAAS8D,qBAAWhE,GAApBE,KACAG,EAAgB2D,qBAAW5D,GAA3BC,YAMFiG,EAAc,WAClB+B,GAAQ,IAGJ9C,EAAY,uCAAG,WAAOnB,EAAKC,GAAZ,SAAAC,EAAA,sEACIC,MAAMH,EAAK,CAChCI,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BtE,IAE7BuE,KAAMC,KAAKC,UAAUT,KATJ,cAWVU,OAAOC,MAAK,SAACnC,GACpBG,QAAQC,IAAIJ,GACZyD,IACAtF,EAAMsH,eAAetH,EAAMuH,YAAc,MAdxB,2CAAH,wDAsBlB,OACE,kBAAC9F,EAAA,EAAD,KACE,kBAACa,EAAA,EAAD,CAAQF,QAAQ,YAAYoC,MAAM,UAAUC,QAhCxB,WACtB4C,GAAQ,KA+BN,mBAGA,kBAAC3C,EAAA,EAAD,CAAQE,KAAMA,EAAMC,QAASS,GAC3B,kBAAC,IAAD,CACE3D,cAAe,CACbsF,QAAS,GACTO,OAAQtI,EAAKuI,KAEfhH,iBAAkBA,EAClBmB,SAAU,SAACC,EAAD,GAAyC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChCD,GAAc,GACdyC,EAAa,qCAAsC1C,GACnDE,IACAD,GAAc,MAGf,gBAAGI,EAAH,EAAGA,aAAH,OACC,oCACE,kBAAC,IAAD,KACE,kBAACwF,EAAA,EAAD,KACE,kBAAC,EAAD,CACE5H,YAAY,mBACZuC,KAAK,UACL2E,WAAW,KAGf,kBAACW,EAAA,EAAD,KACE,kBAACrF,EAAA,EAAD,CAAQmC,QAASa,EAAad,MAAM,WAApC,UAGA,kBAAClC,EAAA,EAAD,CAAQkC,MAAM,UAAUjC,SAAUL,EAAcnC,KAAK,UAArD,iB,iGC3FZR,GAAYC,YAAW,CAC3BoI,kBAAmB,CACjBjI,QAAS,IACTC,OAAQ,OAINC,GAAc,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,KAAM6C,EAAiC,EAAjCA,MAAOoE,EAA0B,EAA1BA,UAAchH,EAAY,4DACnDC,YAASD,GAD0C,mBAClEE,EADkE,KAC3DC,EAD2D,KAEnEC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAACE,EAAA,EAAD,iBACML,EADN,CAEEH,KAAMA,EACNS,WAAYJ,EACZC,QAASD,EACTgC,QAAQ,WACRtC,YAAaA,EACb8C,MAAOA,EACPoE,UAAWA,MAKXvG,GAAmBC,IAAW,CAClCuG,QAASvG,MAAaE,SAAS,4BAA4BuG,SA4F9CU,GAzFa,SAAC7H,GAAW,IAAD,EACbiD,oBAAS,GADI,mBAC9B2B,EAD8B,KACxByC,EADwB,KAE7BnI,EAAS8D,qBAAWhE,GAApBE,KACAG,EAAgB2D,qBAAW5D,GAA3BC,YACFmC,EAAUjC,KAMV+F,EAAc,WAClB+B,GAAQ,IAGJ9C,EAAY,uCAAG,WAAOnB,EAAKC,GAAZ,SAAAC,EAAA,sEACIC,MAAMH,EAAK,CAChCI,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,IAE3BuE,KAAMC,KAAKC,UAAUT,KATJ,cAWVU,OAAOC,MAAK,SAACnC,GACpBG,QAAQC,IAAIJ,MAZK,2CAAH,wDAoBlB,OACE,oCACE,kBAAC6D,EAAA,EAAD,CACEhE,UAAWF,EAAQoG,kBACnBnD,QAhCkB,WACtB4C,GAAQ,KAiCJ,kBAAC,KAAD,CAAgBU,SAAS,UACxB/H,EAAMgI,aAAaC,QAEtB,kBAACvD,EAAA,EAAD,CAAQE,KAAMA,EAAMC,QAASS,GAC3B,kBAAC,IAAD,CACE3D,cAAe,CACbuG,OAAO,GAAD,OAAKhJ,EAAKuI,KAChBR,QAAS,IAEXxG,iBAAkBA,GAClBmB,SAAU,SAACC,EAAD,GAAyC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChCD,GAAc,GACdyC,EAAa,kCAAD,OACwBvE,EAAMmI,QACxCtG,GAEFE,IACAD,GAAc,GACdwD,IACAtF,EAAMsH,eAAetH,EAAMuH,YAAc,MAG1C,gBAAGrF,EAAH,EAAGA,aAAH,OACC,oCACE,kBAAC,IAAD,KACE,kBAACwF,EAAA,EAAD,KACE,kBAAC,GAAD,CACE5H,YAAY,sBACZuC,KAAK,UACL2E,WAAW,KAGf,kBAACW,EAAA,EAAD,KACE,kBAACrF,EAAA,EAAD,CAAQmC,QAASa,EAAad,MAAM,WAApC,UAGA,kBAAClC,EAAA,EAAD,CAAQkC,MAAM,UAAUjC,SAAUL,EAAcnC,KAAK,UAArD,iB,2FCnGZR,GAAYC,aAAW,SAAC4I,GAAD,MAAY,CACvCC,KAAM,CACJ1F,MAAO,QAET2F,QAAS,CACPP,SAAUK,EAAMG,WAAWC,QAAQ,IACnCC,WAAYL,EAAMG,WAAWG,mBAE/BC,KAAM,CACJnG,QAAS,SACTG,MAAO,QAETiG,SAAU,CACRhJ,OAAQ,SAEViJ,YAAa,CACXC,OAAQ,eAKG,SAASC,GAAqB/I,GAC3C,IAAMwB,EAAUjC,KADkC,EAEZ0D,mBAAS,IAFG,mBAE3C+F,EAF2C,KAE9BC,EAF8B,KAG5CnG,EAAUC,cACR7D,EAAS8D,qBAAWhE,GAApBE,KAERgK,qBAAU,YACS,uCAAG,WAAOf,EAAQ/D,GAAf,SAAAd,EAAA,sEACKC,MAAM,kCAAD,OAAmC4E,GAAU,CACvE3E,OAAQ,MACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAY1D,MAPX,cAUTL,OAAOC,MAAK,SAACmF,GACpBF,EAAeE,EAAIC,aAXH,2CAAH,wDAejBC,CAAYrJ,EAAMmI,OAAQnI,EAAMoE,SAC/B,CAACpE,EAAMmI,OAAQnI,EAAMoE,MAAOpE,EAAMuH,cAGrC,IAAM+B,EAAY,uCAAG,WAAOC,GAAP,SAAAjG,EAAA,sEACIC,MAAM,kCAAD,OAAmCvD,EAAMmI,OAAzC,YAAmDoB,GAAa,CACxF/F,OAAQ,SACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAY9H,EAAMoE,UAPlB,cAURL,OACRC,MAAK,SAACmF,GACLnH,QAAQC,IAAIkH,GACZnJ,EAAMsH,eAAetH,EAAMuH,YAAc,MAb1B,2CAAH,sDA2BlB,OACE,yBAAK7F,UAAWF,EAAQ6G,MACtB,kBAACmB,GAAA,EAAD,CAAgBvE,UAAW,GACzB,kBAACwE,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACd3D,GAAG,kBAEH,kBAAC7D,EAAA,EAAD,CAAYT,UAAWF,EAAQ8G,SAA/B,aAEF,kBAACsB,EAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAuBnI,UAAWF,EAAQmH,MACvCK,EAAYc,KAAI,SAACC,EAASC,GAAV,OACf,kBAACC,GAAA,EAAD,CAAMvI,UAAWF,EAAQmH,MACvB,kBAACuB,GAAA,EAAD,CAAUxI,UAAWF,EAAQoH,UAC3B,kBAACnH,EAAA,EAAD,CAAKC,UAAWF,EAAQqH,YAAapE,QAAS,kBAAM3B,EAAQuB,KAAR,mBAAyB0F,EAAQ7B,OAAO1B,YAC1F,kBAAC2D,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,IAAKN,EAAQ7B,OAAOoC,kBAGhC,kBAACC,GAAA,EAAD,CACEC,QAAS,kBAACrI,EAAA,EAAD,CAAYC,QAAQ,WAApB,UAAkC2H,EAAQ7B,OAAOzB,WAAjD,YAA+DsD,EAAQ7B,OAAOxB,YACvF+D,UAAW,kBAACtI,EAAA,EAAD,CAAYC,QAAQ,SAAS2H,EAAQ9C,WAhCtC,SAACsC,EAAWmB,GACpC,GAAIA,EAAiBC,SAASpB,GAC5B,OACE,kBAAC7D,EAAA,EAAD,CAAYjB,QAAS,kBAAM6E,EAAaC,KACtC,kBAAC,KAAD,OA8BKqB,CAAkBb,EAAQtC,IAAKvI,EAAKkK,WAEpCY,IAAMhB,EAAYf,OAAS,EAC1B,kBAAC2B,EAAA,EAAD,CAASxH,QAAQ,WACf,YCvGlB,IAAM7C,GAAYC,YAAW,CAC3BqL,oBAAqB,CACnBlI,MAAO,MACPmI,aAAc,OACdC,OAAQ,mBAEVC,YAAa,CACXC,OAAQ,OACRtI,MAAO,OACPuI,YAAa,QAEfC,WAAY,CACV3I,QAAS,OACT4I,WAAY,SACZC,aAAc,mBAEhBC,iBAAkB,CAChB9I,QAAS,OACTE,eAAgB,OAElBkF,kBAAmB,CACjBjI,QAAS,EACTC,OAAQ,UAEV2L,gBAAiB,CACfzC,OAAQ,aA0GG0C,GAtGE,SAACxL,GAAW,IACnBd,EAAS8D,qBAAWhE,GAApBE,KACAG,EAAgB2D,qBAAW5D,GAA3BC,YACFyD,EAAUC,cACVvB,EAAUjC,KAEV+J,EAAY,uCAAG,WAAOnB,GAAP,SAAA7E,EAAA,sEACIC,MAAM,+BAAD,OAAgC4E,EAAhC,YAA0CjJ,EAAKuI,KAAO,CAChFjE,OAAQ,SACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,MAPV,cAWV0E,OAAOC,MAAK,SAACmF,GAEpB,OADAnJ,EAAMyL,iBAAgB,SAACC,GAAD,4BAAsBA,GAAtB,CAAoCvC,OACnDnH,QAAQC,IAAIkH,MAbF,2CAAH,sDAiBZwC,EAAU,uCAAG,WAAOxD,EAAQX,GAAf,SAAAlE,EAAA,sEACMC,MAAM,8BAA+B,CAC1DC,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,IAE3BuE,KAAMC,KAAKC,UAAU,CACnBqE,SACAX,aAXa,cAgBRzD,OAAOC,MAAK,SAACmF,GACpBnJ,EAAM4L,SAASzC,GACfnH,QAAQC,IAAIkH,MAlBG,2CAAH,wDAqChB,OACE,kBAAC0C,EAAA,EAAD,CAAMnK,UAAWF,EAAQqJ,oBAAqB5F,UAAW,GACvD,kBAACxD,EAAA,EAAD,CAAKC,UAAWF,EAAQ2J,YACtB,kBAAC1J,EAAA,EAAD,CAAKgD,QAAS,kBAAM3B,EAAQuB,KAAR,mBAAyBrE,EAAM8L,kBAAmBpK,UAAWF,EAAQ+J,iBACvF,kBAACnB,EAAA,EAAD,CACE1I,UAAWF,EAAQwJ,YACnBX,IAAKrK,EAAM+L,WACXC,IAAG,UAAKhM,EAAMW,UAAX,YAAwBX,EAAMc,aAGrC,kBAACqB,EAAA,EAAD,CAAYC,QAAQ,YACjBpC,EAAMW,UADT,IACqBX,EAAMc,WAI7B,kBAACW,EAAA,EAAD,CAAK9B,QAAS,GACZ,kBAACwC,EAAA,EAAD,CAAYC,QAAQ,QAAQ6J,WAAS,GAClCjM,EAAMkM,MAET,kBAACtC,EAAA,EAAD,MACA,kBAACnI,EAAA,EAAD,CAAKC,UAAWF,EAAQ8J,kBACtB,kBAAC,GAAD,CACEtD,aAAchI,EAAMgI,aACpBG,OAAQnI,EAAMmI,OACdZ,YAAavH,EAAMuH,YACnBD,eAAgBtH,EAAMsH,iBAExB,kBAAC5B,EAAA,EAAD,CACEjB,QAAS,kBAAMkH,EAAW3L,EAAMmI,OAAQjJ,EAAKuI,MAC7C/F,UAAWF,EAAQoG,mBAEnB,kBAAC,KAAD,CAAaG,SAAS,UACrB/H,EAAMmM,UAAUlE,QA9CrB/I,EAAKuI,MAAQzH,EAAMoM,aAEnB,kBAAC1G,EAAA,EAAD,CACEjB,QAAS,kBAAM6E,EAAatJ,EAAMmI,SAClCzG,UAAWF,EAAQoG,mBAEnB,kBAAC,KAAD,CAAmBG,SAAS,WAIzB,MAwCL,kBAAC,GAAD,CAAkBI,OAAQnI,EAAMmI,OAAQ/D,MAAO/E,EAAakI,YAAavH,EAAMuH,YAAaD,eAAgBtH,EAAMsH,oBC5IpH/H,GAAYC,YAAW,CAC3B6M,kBAAmB,CACjBC,SAAU,OACVC,cAAe,OACfxH,WAAY,QAGdyH,cAAe,CACbC,gBAAiB,aAEnB5F,MAAO,CACL6F,YAAa,UA4CFC,GAxCM,SAAC3M,GACpB,IAAM4M,EAAW5M,EAAM6M,MACjBrL,EAAUjC,KAEhB,OACE,kBAACuN,EAAA,EAAD,CAAWpL,UAAWF,EAAQ6K,kBAAmBU,SAAS,MACxD,kBAAC/H,EAAA,EAAD,CAAOtD,UAAWF,EAAQgL,cAAevH,UAAW,IAClD,kBAAC2E,EAAA,EAAD,MACA,kBAACnI,EAAA,EAAD,CACEuL,SAAU,EACVxK,QAAQ,OACRC,cAAc,SACd2I,WAAW,UAEVwB,EACE9C,KAAI,SAACoC,EAAMlC,GAAP,OACH,kBAAC,GAAD,CACEiD,IAAG,UAAKf,EAAKhE,OAAOzB,WAAjB,YAA+ByF,EAAKhE,OAAOxB,UAA3C,YAAwDwF,EAAKhE,OAAOT,IAApE,YAA2EuC,GAC9ErJ,UAAWuL,EAAKhE,OAAOzB,WACvB3F,SAAUoL,EAAKhE,OAAOxB,UACtBqF,WAAYG,EAAKhE,OAAOoC,cACxB8B,aAAcF,EAAKhE,OAAOT,IAC1ByE,KAAMA,EAAKjF,QACXwE,gBAAiBzL,EAAMyL,gBACvBtD,OAAQ+D,EAAKzE,IACb0E,UAAWD,EAAKgB,MAChBlF,aAAckE,EAAK9C,SACnBwC,SAAU5L,EAAM4L,SAChBE,eAAgBI,EAAKhE,OAAO1B,QAC5Be,YAAavH,EAAMuH,YACnBD,eAAgBtH,EAAMsH,oBAGzB6F,cC9CE,SAASC,KAAsB,IACpClO,EAAS8D,qBAAWhE,GAApBE,KACAG,EAAgB2D,qBAAW5D,GAA3BC,YAFmC,EAIjB4D,qBAJiB,mBAIpC4J,EAJoC,KAI7BQ,EAJ6B,OAKjBpK,mBAAS,IALQ,mBAKpCiK,EALoC,KAK7BtB,EAL6B,OAMH3I,mBAAS,IANN,mBAMpCyI,EANoC,KAMtBD,EANsB,OAOLxI,mBAAS,GAPJ,mBAOpCsE,EAPoC,KAOvBD,EAPuB,KAmC3C,OA1BA4B,qBAAU,WAAM,4CAEd,WAAwB9F,GAAxB,SAAAE,EAAA,sEACyBC,MAAMH,EAAK,CAChCI,OAAQ,MACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,MAP/B,cAWK0E,OACAC,MAAK,SAACmF,GACLkE,EAASlE,EAAI0D,UAEdvI,OAAM,SAACgJ,GACNtL,QAAQ3B,MAAMiN,MAhBpB,4CAFc,2DAsBdC,CAAS,iCAER,CAAClO,EAAaqM,EAAcwB,EAAO3F,IAElCsF,GAASA,EAAM5E,OAAS,EAExB,kBAAC6E,EAAA,EAAD,KACE,kBAACrL,EAAA,EAAD,CAAK/B,UAAU,UACb,kBAACyC,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBAAoClD,EAAKuH,WAAzC,MACA,kBAAC,EAAD,CACEc,YAAaA,EACbD,eAAgBA,KAGpB,kBAAC,GAAD,CACEuF,MAAOA,EACPnB,aAAcA,EACdD,gBAAiBA,EACjBG,SAAUA,EACVrE,YAAaA,EACbD,eAAgBA,KAMpB,kBAACwF,EAAA,EAAD,KACE,kBAACrL,EAAA,EAAD,sBAAgBvC,EAAKuH,WAArB,MACA,kBAAC,EAAD,MACA,kBAACzB,EAAA,EAAD,CAAOC,UAAW,IAChB,kBAAC9C,EAAA,EAAD,iCCzDV,IAAM5C,GAAYC,YAAW,CAC3B6M,kBAAmB,CACjBC,SAAU,OACVC,cAAe,OACfxH,WAAY,QAGdyH,cAAe,CACbC,gBAAiB,aAEnB5F,MAAO,CACL6F,YAAa,UA+CFc,GA3CE,SAACxN,GAChB,IAAMwB,EAAUjC,KACVqN,EAAW5M,EAAM6M,MACvB,OACE,kBAACC,EAAA,EAAD,CAAWpL,UAAWF,EAAQ6K,kBAAmBU,SAAS,MACxD,kBAAC/H,EAAA,EAAD,CAAOtD,UAAWF,EAAQgL,cAAevH,UAAW,IAClD,kBAAC9C,EAAA,EAAD,CAAYT,UAAWF,EAAQqF,MAAOzE,QAAQ,YAC3CpC,EAAMW,UADT,YAGA,kBAACiJ,EAAA,EAAD,MACA,kBAACnI,EAAA,EAAD,CACEuL,SAAU,EACVxK,QAAQ,OACRC,cAAc,SACd2I,WAAW,UAEVwB,EAAS9C,KAAI,SAACoC,EAAMlC,GAAP,OACZ,kBAAC,GAAD,CACEiD,IAAG,UAAKjN,EAAMW,UAAX,YAAwBX,EAAMc,SAA9B,YAA0Cd,EAAMwH,OAAhD,YAA0DwC,GAC7DrJ,UAAWX,EAAMW,UACjBG,SAAUd,EAAMc,SAChBiL,WAAY/L,EAAM+L,WAClBK,aAAcpM,EAAMwH,OACpB0E,KAAMA,EAAKjF,QACXkB,OAAQ+D,EAAKzE,IACbiE,aAAc1L,EAAM0L,aACpBD,gBAAiBzL,EAAMyL,gBACvBU,UAAWD,EAAKgB,MAChBlF,aAAckE,EAAK9C,SACnB0C,eAAgB9L,EAAMwG,QACtB0G,MAAOlN,EAAMkN,MACbtB,SAAU5L,EAAM4L,SAChBrE,YAAavH,EAAMuH,YACnBD,eAAgBtH,EAAMsH,oBAGvB6F,c,0CCgDEM,GAzGM,SAACzN,GAAW,IACvBX,EAAgB2D,qBAAW5D,GAA3BC,YAEFqO,EAAc,uCAAG,sBAAApK,EAAA,sEACEC,MAAM,4CAA6C,CACxEC,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,IAE3BuE,KAAMC,KAAKC,UAAU,CACnB6J,YAAa3N,EAAM2N,YACnBC,SAAU5N,EAAM4N,aAXC,cAcZ7J,OACRC,MAAK,SAACmF,GACLnH,QAAQC,IAAIkH,MAEb7E,OAAM,SAACgJ,GACNtL,QAAQ3B,MAAMiN,MAnBK,2CAAH,qDAwBdO,EAAiB,uCAAG,sBAAAvK,EAAA,sEACDC,MAAM,8CAA+C,CAC1EC,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,IAE3BuE,KAAMC,KAAKC,UAAU,CACnB6J,YAAa3N,EAAM2N,YACnBC,SAAU5N,EAAM4N,aAXI,cAcf7J,OACRC,MAAK,SAACmF,GACLnH,QAAQC,IAAIkH,MAEb7E,OAAM,SAACgJ,GACNtL,QAAQ3B,MAAMiN,MAnBQ,2CAAH,qDAuBjBQ,EAAmB,uCAAG,sBAAAxK,EAAA,sEACHC,MAAM,uCAAwC,CACnEC,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,IAE3BuE,KAAMC,KAAKC,UAAU,CACnB6J,YAAa3N,EAAM2N,YACnBC,SAAU5N,EAAM4N,aAXM,cAcjB7J,OACRC,MAAK,SAACmF,GACLnH,QAAQC,IAAIkH,MAEb7E,OAAM,SAACgJ,GACNtL,QAAQ3B,MAAMiN,MAnBU,2CAAH,qDAwBzB,OAAItN,EAAM+N,QAAQpD,SAAS3K,EAAM4N,UAE7B,kBAACtL,EAAA,EAAD,CAAQmC,QAASqJ,EAAqB1L,QAAQ,YAC5C,kBAACD,EAAA,EAAD,CAAYC,QAAQ,WAApB,aAIKpC,EAAMgO,OAAOrD,SAAS3K,EAAM4N,UAEnC,kBAACtL,EAAA,EAAD,CAAQC,UAAQ,EAACH,QAAQ,YACvB,kBAACD,EAAA,EAAD,CAAYC,QAAQ,WAApB,cAIKpC,EAAMiO,QAAQtD,SAAS3K,EAAM4N,UAEpC,kBAACtL,EAAA,EAAD,CAAQmC,QAASoJ,EAAmBzL,QAAQ,YAC1C,kBAACD,EAAA,EAAD,CAAYC,QAAQ,WAApB,0BAIKpC,EAAM2N,cAAgB3N,EAAM4N,SAEnC,kBAACtL,EAAA,EAAD,CAAQmC,QAASiJ,EAAgBtL,QAAQ,YACvC,kBAACD,EAAA,EAAD,CAAYC,QAAQ,WAApB,eAIC,M,kEC5FT,WAA4BgB,EAAK8K,EAAK9J,EAAO+J,GAA7C,eAAA7K,EAAA,6DACQ8K,EAAY,IAAIC,UACZC,OAAO,MAAOJ,GAExBlM,QAAQC,IAAIiM,GAJd,SAMyB3K,MAAMH,EAAK,CAChCI,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CAEPmE,cAAc,UAAD,OAAY1D,IAE3BR,KAAMwK,IAdV,cAiBKrK,OACAC,MAAK,SAACmF,GACLnH,QAAQC,IAAIkH,GACZnH,QAAQC,IAAI,oBACZkM,EAAQI,WAAWJ,EAAQ5G,YAAc,MAE1CjD,OAAM,SAACgJ,GAAD,OAAStL,QAAQC,IAAI,QAASqL,MAvBzC,4C,sBA0BA,IAAM/N,GAAYC,YAAW,CAC3BgP,UAAW,CACThM,QAAS,OACTC,cAAe,SACfE,MAAO,eAsDI8L,GAlDW,SAACzO,GAAW,IAAD,EACHiD,qBADG,mBAC9ByL,EAD8B,KACnBC,EADmB,KAE3BtP,EAAgB2D,qBAAW5D,GAA3BC,YAEFmC,EAAUjC,KAShB,OACE,kBAACuN,EAAA,EAAD,CAAWpL,UAAWF,EAAQgN,WAC5B,kBAACrM,EAAA,EAAD,CAAYC,QAAQ,KAAKwM,MAAM,UAA/B,gBAGA,kBAAChF,EAAA,EAAD,MACA,kBAACnI,EAAA,EAAD,CAAK7B,OAAO,aACV,kBAACiP,GAAA,EAAD,CAAWC,KAAK,OAAOC,QAAQ,QAA/B,mBAGA,6BACE,kBAACC,GAAA,EAAD,CACEC,SAAU,SAACpJ,GAnBU,IAACqJ,IAoBGrJ,EAAEsJ,OAAOC,MAAM,GAnBhDT,EAAaO,GACblN,QAAQC,IAAIiN,GACZlN,QAAQC,IAAI,8BACZD,QAAQC,IAAIyM,IAkBJ3O,KAAK,OACLsC,KAAK,UAGT,kBAACC,EAAA,EAAD,CACEmC,QAAS,SAACoB,I,2CACRtB,CACE,2CACAmK,EACArP,EACA,CAACkP,WAAYvO,EAAMsH,eAAgBC,YAAavH,EAAMuH,cAExDvH,EAAMsF,gBARV,mBChEF/F,GAAYC,YAAW,CAC3B6P,SAAU,CACRC,UAAW,OACX9M,QAAS,QAEX+M,QAAS,CACP/M,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,MAAO,SAET6M,SAAU,CACRC,UAAW,SACX/P,UAAW,UAEbgQ,YAAa,CACXlN,QAAS,OACTE,eAAgB,gBAElBiN,UAAW,CACT1E,OAAQ,QACRtI,MAAO,SAETiN,aAAc,CACZH,UAAW,YAkFAI,GA9EE,SAAC7P,GAChB,IAAMwB,EAAUjC,KADU,EAEF0D,oBAAS,GAFP,mBAEnB2B,EAFmB,KAEbyC,EAFa,KAQpByI,EAAyB,WAC7BzI,GAAQ,IAGV,OACE,kBAACyF,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAClB,EAAA,EAAD,CAAM5G,UAAW,GAAIvD,UAAWF,EAAQ6N,UACtC,kBAACjF,EAAA,EAAD,CACE1I,UAAWF,EAAQmO,UACnBvN,QAAQ,UACRiI,IAAKrK,EAAM+L,WACXC,IAAG,UAAKhM,EAAMW,UAAX,YAAwBX,EAAMc,YAEnC,kBAACW,EAAA,EAAD,CAAKC,UAAWF,EAAQ+N,SACtB,kBAAC9N,EAAA,EAAD,CAAKC,UAAWF,EAAQgO,UACtB,kBAACrN,EAAA,EAAD,CAAYC,QAAQ,MACjBpC,EAAMW,UADT,IACqBX,EAAMc,WAG7B,kBAACW,EAAA,EAAD,CACE7B,OAAO,OACP6E,QAAS,kBAAMzE,EAAMsH,eAAetH,EAAMuH,YAAc,IACxD7F,UAAWF,EAAQoO,cAEnB,kBAAC,GAAD,CACEhC,SAAU5N,EAAM4N,SAChBD,YAAa3N,EAAM2N,YACnBI,QAAS/N,EAAM+P,eACf/B,OAAQhO,EAAMgQ,cACd/B,QAASjO,EAAMiQ,kBAGlBjQ,EAAMkQ,KAAOlQ,EAAMmQ,MAAQnQ,EAAMoQ,MAChC,kBAAC3O,EAAA,EAAD,CAAKC,UAAWF,EAAQkO,aACtB,kBAACvN,EAAA,EAAD,CAAYC,QAAQ,YACjBpC,EAAMkQ,IACP,kBAAC,KAAD,OAEF,kBAAC/N,EAAA,EAAD,KACGnC,EAAMmQ,KADT,KACiBnQ,EAAMoQ,MACrB,kBAAC,KAAD,QAGF,KACHpQ,EAAM4N,WAAa5N,EAAM2N,YACxB,kBAAClM,EAAA,EAAD,CAAK7B,OAAO,QACV,kBAAC0C,EAAA,EAAD,CACEmC,QAAS,WAlDrB4C,GAAQ,IAmDIjF,QAAQ,aAFV,gBAMA,kBAACsC,EAAA,EAAD,CAAQE,KAAMA,EAAMC,QAASiL,GAC3B,kBAAC,GAAD,CACEO,QAASrQ,EAAMkQ,IACfI,SAAUtQ,EAAMmQ,KAChBI,UAAWvQ,EAAMoQ,MACjB9K,YAAawK,EACbxI,eAAgBtH,EAAMsH,eACtBC,YAAavH,EAAMuH,gBAIvB,SC5GC,SAASiJ,KAAoB,IACpChK,EAAYiK,cAAZjK,QAEEnH,EAAgB2D,qBAAW5D,GAA3BC,YACAH,EAAS8D,qBAAWhE,GAApBE,KAJiC,EAKH+D,mBAAS,MALN,mBAKlCyN,EALkC,KAKrBC,EALqB,OAMP1N,oBAAS,GANF,mBAMlC2N,EANkC,KAMvBC,EANuB,OAOH5N,mBAAS,GAPN,mBAOlCsE,EAPkC,KAOrBD,EAPqB,OAQDrE,mBAAS,IARR,mBAQlCyI,EARkC,KAQpBD,EARoB,OASfxI,mBAAS,IATM,mBASlCiK,EATkC,KAS3BtB,EAT2B,KAUnCkF,EAAS5R,EAAKuI,IA8BpB,OA3BAyB,qBAAU,WAAM,4CACd,WAA8B9F,GAA9B,SAAAE,EAAA,sEACyBC,MAAMH,EAAK,CAChCI,OAAQ,MACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,MAP/B,cAYG0E,OACAC,MAAK,SAACmF,GACLwH,EAAexH,EAAI4H,OAAO,IAC1BF,GAAa,MAEdvM,OAAM,SAACgJ,GACNtL,QAAQ3B,MAAMiN,MAlBlB,4CADc,uBAAC,SAAD,2BAuBd0D,CAAe,oCAAD,OAAqCxK,MAElD,CAACA,EAASnH,EAAakI,EAAamE,EAAcwB,SAEjC+D,IAAhBP,EACK,kBAACvO,EAAA,EAAD,qBAGLyO,EACK,kBAACzO,EAAA,EAAD,mBAIP,kBAAC2K,EAAA,EAAD,CAAWoE,gBAAc,EAACnE,SAAS,MACjC,kBAAC,GAAD,CACEmD,IAAKQ,EAAYR,IACjBvP,UAAW+P,EAAYjK,WACvB3F,SAAU4P,EAAYhK,UACtByJ,KAAMO,EAAYP,KAClBC,MAAOM,EAAYN,MACnBrE,WAAY2E,EAAYpG,cAExByF,eAAgBW,EAAYS,QAAQpD,QACpCiC,cAAeU,EAAYS,QAAQnD,OACnCiC,eAAgBS,EAAYS,QAAQlD,QACpCN,YAAa+C,EAAYjJ,IACzBH,eAAgBA,EAChBC,YAAaA,EACbqG,SAAUkD,IAEZ,kBAACrP,EAAA,EAAD,KAEE,kBAAC,GAAD,CACEsK,WAAY2E,EAAYpG,cACxBuC,MAAO6D,EAAY7D,MAAM/C,KAAI,SAACoC,GAAD,OAAUA,KACvCvL,UAAW+P,EAAYjK,WACvB3F,SAAU4P,EAAYhK,UACtBc,OAAQkJ,EAAYjJ,IACpBiE,aAAcA,EACdD,gBAAiBA,EACjBjF,QAASkK,EAAYlK,QACrB0G,MAAOA,EACPtB,SAAUA,EACVrE,YAAaA,EACbD,eAAgBA,M,cC7EpB/H,GAAYC,YAAW,CAC3B4R,WAAY,CACVnG,OAAQ,QACRtI,MAAO,SAGTgN,UAAW,CACT1E,OAAQ,QACRtI,MAAO,QACP/C,OAAQ,YACRkJ,OAAQ,WAGV8G,aAAc,CACZhQ,OAAQ,OACRF,UAAW,YA2BA2R,GAvBO,SAACrR,GACrB,IAAMwB,EAAUjC,KACVuD,EAAUC,cAEhB,OACE,kBAAC8I,EAAA,EAAD,CAAMnK,UAAWF,EAAQ4P,YACvB,kBAAC3P,EAAA,EAAD,CAAKgD,QAAS,kBAAM3B,EAAQuB,KAAR,mBAAyBrE,EAAMsR,eACnD,kBAAClH,EAAA,EAAD,CAAQC,IAAKrK,EAAM+L,WAAYrK,UAAWF,EAAQmO,aAElD,kBAACxN,EAAA,EAAD,CAAYyM,MAAM,UAAlB,UAA+B5O,EAAMyG,WAArC,YAAmDzG,EAAM0G,YACzD,kBAACjF,EAAA,EAAD,CAAKC,UAAWF,EAAQoO,aAAcnL,QAAS,kBAAMzE,EAAMuR,eAAevR,EAAMwR,YAAc,KAC5F,kBAAC,GAAD,CACE5D,SAAU5N,EAAM4N,SAChBD,YAAa3N,EAAM2N,YACnBI,QAAS/N,EAAM+P,eACf/B,OAAQhO,EAAMgQ,cACd/B,QAASjO,EAAMiQ,oBCvCnB1Q,GAAYC,YAAW,CAC3BiS,mBAAoB,KAiFPC,GA9EG,SAAC1R,GAAW,IACpBd,EAAS8D,qBAAWhE,GAApBE,KACAG,EAAgB2D,qBAAW5D,GAA3BC,YAFmB,EAGD4D,mBAAS,IAHR,mBAGpB0O,EAHoB,KAGbC,EAHa,OAIW3O,mBAAS,GAJpB,mBAIpBuO,EAJoB,KAIPD,EAJO,KAKrB/P,EAAUjC,KAsBhB,OApBA2J,qBAAU,YACS,uCAAG,sBAAA5F,EAAA,sEACKC,MAAM,8BAA+B,CAC1DC,OAAQ,MACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChBmE,cAAc,UAAD,OAAYzI,MAPX,cAUT0E,OAAOC,MAAK,SAACmF,GACpBnH,QAAQC,IAAIkH,GACZyI,EAASzI,MAZO,2CAAH,qDAgBjB0I,KACC,CAACxS,EAAamS,IAEI,IAAjBG,EAAM1J,OAEN,kBAAC6J,GAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,IACRC,QAAQ,SACRzD,WAAS,EACT9M,UAAWF,EAAQiQ,oBAElBE,EAAM7H,KAAI,SAACoI,EAAUlI,GACpB,OAAIkI,EAASzK,MAAQvI,EAAKuI,IAEtB,kBAACqK,GAAA,EAAD,CAAMK,MAAI,GACR,kBAAC,GAAD,CACE1L,WAAYyL,EAASzL,WACrBC,UAAWwL,EAASxL,UACpB8K,YAAaA,EACbD,eAAgBA,EAChB3D,SAAU1O,EAAKuI,IACfkG,YAAauE,EAASzK,IACtBsE,WAAYmG,EAAS5H,cACrByF,eAAgBmC,EAASf,QAAQpD,QACjCkC,eAAgBiC,EAASf,QAAQlD,QACjC+B,cAAekC,EAASf,QAAQnD,OAChCsD,WAAYY,EAAS1L,WAMtB,SAOb,kBAACsL,GAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,IACRC,QAAQ,SACRzD,WAAS,EACT9M,UAAWF,EAAQiQ,oBAEnB,kBAACK,GAAA,EAAD,CAAMK,MAAI,GACR,kBAAChQ,EAAA,EAAD,CAAYC,QAAQ,MAAM,gBCFnBgQ,GAlEH,WAAO,IAAD,EACQnP,mBAAS,MADjB,mBACT/D,EADS,KACHC,EADG,OAEsB8D,mBAAS,MAF/B,mBAET5D,EAFS,KAEIC,EAFJ,OAGkB2D,oBAAS,GAH3B,mBAGT2N,EAHS,KAGEC,EAHF,KA+BhB,OA1BA3H,qBAAU,WAAM,4CACd,sBAAA5F,EAAA,sEACyBC,MAAM,0CAA2C,CACtEC,OAAQ,OACRC,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,eAAgB,sBANtB,cASWI,OAAOC,MAAK,SAACnC,GACpB,IAAIoC,EAAWpC,EAAK3C,KACpB8C,QAAQC,IAAIgC,GACZ9E,EAAQ8E,GACR3E,EAAeuC,EAAKuC,OACpByM,GAAa,MAdjB,4CADc,sBAkBTlK,SAASC,OAAO+D,SAAS,iBAEX,MAARzL,IACT8C,QAAQC,IAAI0E,SAASC,OAAO+D,SAAS,kBArBxB,WAAD,wBAsBZ0H,IAHAxB,GAAa,KAKd,CAAC3R,IAEA0R,EACK,kBAACzO,EAAA,EAAD,mBAGP,kBAACnD,EAAYsT,SAAb,CAAsBlR,MAAO,CAAElC,OAAMC,YACnC,kBAACC,EAAckT,SAAf,CAAwBlR,MAAO,CAAE/B,cAAaC,mBAC5C,kBAAC,EAAD,MACCJ,GAAQG,EACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkT,KAAK,QACLC,OAAQ,kBAAM,2DAEhB,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAQ,kBAAM,qDACpC,kBAAC,IAAD,CACED,KAAK,oBACLE,OAAK,EACLlM,SAAU,kBAACiK,GAAD,QAEZ,kBAAC,IAAD,CAAO+B,KAAK,aAAahM,SAAU,kBAAC6G,GAAD,QACnC,kBAAC,IAAD,CAAOmF,KAAK,aAAahM,SAAU,kBAAC,GAAD,QACnC,kBAAC,IAAD,CAAOgM,KAAK,IAAIE,OAAK,EAACD,OAAQ,kBAAM,kBAAC,IAAD,CAAUlM,GAAG,kBACjD,kBAAC,IAAD,CAAOiM,KAAK,IAAIC,OAAQ,kBAAM,iDAGhC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,KAAK,IAAIhM,SAAU,kBAAC,EAAD,QAC1B,kBAAC,IAAD,CAAUD,GAAG,UC7DLJ,QACW,cAA7BwM,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJpM,SAASqM,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnP,MAAK,SAAAoP,GACJA,EAAaC,gBAEd/O,OAAM,SAAAjE,GACL2B,QAAQ3B,MAAMA,EAAM4G,c","file":"static/js/main.261168e1.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const UserContext = createContext({\n  user: null,\n  setUser: () => {},\n});\n","import { createContext } from \"react\";\n\nexport const AccessContext = createContext({\n  accessToken: null,\n  setAccessToken: () => {},\n});\n","import React from \"react\";\n\nimport { TextField, Button, Box, makeStyles, Typography } from \"@material-ui/core\";\nimport { Formik, useField, Form } from \"formik\";\nimport * as yup from \"yup\";\n\nconst useStyles = makeStyles({\n  signInContainer: {\n    textAlign: \"center\",\n    \"& Form\": {\n      padding: \"1rem\",\n      \"& div\": {\n        margin: \"0.5rem auto\",\n      },\n    },\n  },\n});\n\nconst MyTextField = ({ placeholder, type, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      type={type}\n      placeholder={placeholder}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  firstName: yup.string().required().max(35),\n  lastName: yup.string().required().max(35),\n  email: yup.string().required().email(\"Must be a valid E-mail\"),\n  password: yup\n    .string()\n    .required()\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/,\n      \"Must be atleast 6 characters, as well as One uppercase, One lowercase, One number and One special case character\"\n    ),\n  passwordConfirm: yup\n    .string()\n    .required()\n    .test(\"passwords-match\", \"Passwords must match\", function (value) {\n      return this.parent.password === value;\n    }),\n});\n\nconst SignUpForm = () => {\n  const classes = useStyles()\n  return (\n    <Box className={classes.signInContainer}>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirm: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(data, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          console.log(data);\n          setSubmitting(false);\n          resetForm({});\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Box>\n          <Typography variant=\"h6\">Sign Up</Typography>\n          <Form>\n            <MyTextField\n              placeholder=\"First Name..\"\n              name=\"firstName\"\n              type=\"input\"\n            />\n            <div>\n              <MyTextField\n                placeholder=\"Last Name..\"\n                name=\"lastName\"\n                type=\"input\"\n              />\n            </div>\n            <div>\n              <MyTextField placeholder=\"E-mail..\" name=\"email\" type=\"email\" />\n            </div>\n            <div>\n              <MyTextField\n                placeholder=\"Password..\"\n                name=\"password\"\n                type=\"password\"\n              />\n            </div>\n            <div>\n              <MyTextField\n                placeholder=\"Confirm Password..\"\n                name=\"passwordConfirm\"\n                type=\"password\"\n              />\n            </div>\n            <div>\n              <Button disabled={isSubmitting} type=\"submit\">\n                submit\n              </Button>\n            </div>\n            {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n            <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n          </Form>\n          </Box>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default SignUpForm;\n","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { TextField, Button, Box, makeStyles, Dialog } from \"@material-ui/core\";\nimport { Formik, useField, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { UserContext } from \"../../../../UserContext\";\nimport { AccessContext } from \"../../../../AccessContext\";\nimport SignUpForm from \"./signUpForm\";\n\nconst useStyles = makeStyles({\n  signInContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    width: \"20rem\",\n    textAlign: \"center\",\n    \"& Form\": {\n      padding: \"1rem\",\n      \"& div\": {\n        margin: \"0.5rem auto\",\n      },\n    },\n  },\n});\n\nconst MyTextField = ({ placeholder, type, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      type={type}\n      helperText={errorText}\n      error={!!errorText}\n      variant=\"outlined\"\n      label={placeholder}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup.string().required().email(\"Must be a valid e-mail\"),\n  password: yup.string().required(),\n});\n\nconst SignInForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { setUser } = useContext(UserContext);\n  const { setAccessToken } = useContext(AccessContext);\n  const [signUpOpen, setSignUpOpen] = useState(false)\n\n  const handleDialogOpen = () => {\n    setSignUpOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setSignUpOpen(false);\n  };\n\n  async function handleSubmit(url, values) {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    });\n    response\n      .json()\n      .then((data) => {\n        //extract access token from response\n        //extract user object from response\n        let currUser = Object.entries(data.user)[0][1];\n        console.log(currUser);\n        setUser(currUser);\n        setAccessToken(data.token);\n        history.push(\"/dashboard\");\n      })\n      .catch((error) => {\n        return console.error(error);\n      });\n  }\n\n  return (\n    <Box className={classes.signInContainer}>\n      <h1>Sign in</h1>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(data, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          handleSubmit(\"http://localhost:4000/userauth/login\", data);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Box>\n            <Form>\n              <div>\n                <MyTextField placeholder=\"E-mail..\" name=\"email\" type=\"email\" />\n              </div>\n              <div>\n                <MyTextField\n                  placeholder=\"Password..\"\n                  name=\"password\"\n                  type=\"password\"\n                />\n              </div>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={isSubmitting}\n                type=\"submit\"\n              >\n                submit\n              </Button>\n            </Form>\n          </Box>\n        )}\n      </Formik>\n      <p>\n        Not a member?{\" \"}\n        <Button onClick={handleDialogOpen} color=\"primary\" variant=\"text\">\n          Sign Up!\n        </Button>\n      </p>\n      <Dialog fullWidth open={signUpOpen} onClose={handleDialogClose}>\n          <SignUpForm />\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default SignInForm;\n","import React from \"react\";\nimport SignInForm from \"./components/signInForm\";\nimport { Paper, Box } from \"@material-ui/core\";\n\n\nconst AuthLanding = () => {\n\n    return (\n      <Box paddingTop=\"2rem\" display=\"flex\" justifyContent=\"center\">\n        <Paper elevation={5}>\n        <SignInForm />\n        </Paper>\n      </Box>\n    );\n  }\n\nexport default AuthLanding;\n","import React, { useContext } from \"react\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Menu,\n  IconButton,\n  Typography,\n  MenuItem,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../../UserContext\";\nimport { AccessContext } from \"../../../AccessContext\";\n\nconst HeaderComponent = () => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const { user, setUser } = useContext(UserContext);\n  const { setAccessToken } = useContext(AccessContext)\n\n  const clickHandler = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    //remove loggedIn cookie then set accessToken and user to null\n    document.cookie = \"loggedIn=true; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    setAccessToken(null)\n    setUser(null)\n    handleClose()\n  }\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {/* Render menu if user logged in */}\n        {user ? (\n          <>\n            <IconButton\n              edge=\"start\"\n              className=\"navMenuButton\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={(e) => clickHandler(e)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                to=\"/dashboard\"\n                onClick={handleClose}\n              >\n                Timeline\n              </MenuItem>\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                to={\"/userIndex\"}\n                onClick={handleClose}\n              >\n                User List\n              </MenuItem>\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                children={Link}\n                to={`/profile/${user.userurl}`}\n                onClick={handleClose}\n              >\n                My Profile\n              </MenuItem>\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                to={`/profile/${user.first_name}${user.last_name}/edit`}\n                onClick={handleClose}\n              >\n                Edit Profile\n              </MenuItem>\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                onClick={handleLogout}\n              >\n                Logout\n              </MenuItem>\n            </Menu>\n          </>\n        ) : null}\n        <Typography variant=\"h6\" color=\"inherit\">\n          {document.title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HeaderComponent;","import React from \"react\";\n\nimport HeaderComponent from \"./Header/Header\";\n\nconst Layout = () => {\n  return (\n    <div>\n      <HeaderComponent />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useContext } from \"react\";\nimport {\n  TextField,\n  Dialog,\n  Button,\n  Box,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { Form, useField, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { UserContext } from \"../../UserContext\";\nimport { AccessContext } from \"../../AccessContext\";\n\nconst MyTextField = ({ placeholder, type, label, multiline, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      type={type}\n      helperText={errorText}\n      error={!!errorText}\n      variant=\"outlined\"\n      placeholder={placeholder}\n      label={label}\n      multiline={multiline}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  message: yup\n    .string()\n    .required(\"Post cannot be empty.\")\n    .min(5, \"Post must be atleast 5 characters.\")\n    .trim(),\n});\n\nconst CreatePostDialog = (props) => {\n  const [open, setOpen] = useState(false);\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  //AUTH WORKS!!!!!!!!!!!!!!!!!!!!!!!!! 7/23/20 22:11\n  const handleSubmit = async (url, values) => {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(values),\n    });\n    response.json().then((data) => {\n      console.log(data)\n      handleClose()\n      props.setRefreshInfo(props.refreshInfo + 1)\n    })\n  };\n\n  // async function handlePostSubmit(url, value) {\n  //   const response = \"hi\";\n  // }\n\n  return (\n    <Box>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n        Create new post\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <Formik\n          initialValues={{\n            message: \"\",\n            userId: user._id\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(data, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            handleSubmit(\"http://localhost:5000/posts/create\", data);\n            resetForm();\n            setSubmitting(false);\n          }}\n        >\n          {({ isSubmitting }) => (\n            <>\n              <Form>\n                <DialogContent>\n                  <MyTextField\n                    placeholder=\"What's goin' on?\"\n                    name=\"message\"\n                    multiline={true}\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button color=\"primary\" disabled={isSubmitting} type=\"submit\">\n                    Post\n                  </Button>\n                </DialogActions>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CreatePostDialog;\n","import React, { useState, useContext } from \"react\";\nimport {\n  TextField,\n  Dialog,\n  Button,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { Form, useField, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { UserContext } from \"../../UserContext\";\nimport { AccessContext } from \"../../AccessContext\";\n\nconst useStyles = makeStyles({\n  interactionButton: {\n    padding: \"0\",\n    margin: \"0\",\n  },\n});\n\nconst MyTextField = ({ placeholder, type, label, multiline, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      type={type}\n      helperText={errorText}\n      error={!!errorText}\n      variant=\"outlined\"\n      placeholder={placeholder}\n      label={label}\n      multiline={multiline}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  message: yup.string().required(\"Comment cannot be empty.\").trim(),\n});\n\nconst CreateCommentDialog = (props) => {\n  const [open, setOpen] = useState(false);\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  //AUTH WORKS!!!!!!!!!!!!!!!!!!!!!!!!! 7/23/20 22:11\n  const handleSubmit = async (url, values) => {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify(values),\n    });\n    response.json().then((data) => {\n      console.log(data);\n    });\n  };\n\n  // async function handlePostSubmit(url, value) {\n  //   const response = \"hi\";\n  // }\n\n  return (\n    <>\n      <IconButton\n        className={classes.interactionButton}\n        onClick={handleClickOpen}\n      >\n        <ChatBubbleIcon fontSize=\"small\" />\n        {props.postComments.length}\n      </IconButton>\n      <Dialog open={open} onClose={handleClose}>\n        <Formik\n          initialValues={{\n            author: `${user._id}`,\n            message: \"\",\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(data, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            handleSubmit(\n              `http://localhost:5000/comments/${props.postId}`,\n              data\n            );\n            resetForm();\n            setSubmitting(false);\n            handleClose();\n            props.setRefreshInfo(props.refreshInfo + 1);\n          }}\n        >\n          {({ isSubmitting }) => (\n            <>\n              <Form>\n                <DialogContent>\n                  <MyTextField\n                    placeholder=\"Type your comment..\"\n                    name=\"message\"\n                    multiline={true}\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button color=\"primary\" disabled={isSubmitting} type=\"submit\">\n                    Post\n                  </Button>\n                </DialogActions>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CreateCommentDialog;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Divider,\n  Box,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../UserContext\"; \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  list: {\n    display: \"inline\",\n    width: \"100%\",\n  },\n  listItem: {\n    margin: \"2px 0\",\n  },\n  avatarHover: {\n    cursor: \"pointer\"\n  }\n}));\n\n//comment accordion\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n  const [commentsArr, setCommentsArr] = useState([]);\n  const history = useHistory()\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    const getComments = async (postId, token) => {\n      const response = await fetch(`http://localhost:5000/comments/${postId}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      response.json().then((res) => {\n        setCommentsArr(res.comments);\n      });\n    };\n\n    getComments(props.postId, props.token);\n  }, [props.postId, props.token, props.refreshInfo]);\n\n\n  const handleDelete = async (commentId) => {\n    const response = await fetch(`http://localhost:5000/comments/${props.postId}/${commentId}`, {\n        method: \"DELETE\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${props.token}`,\n        },\n      });\n      response.json()\n      .then((res) => {\n        console.log(res)\n        props.setRefreshInfo(props.refreshInfo + 1)\n      })\n  }\n\n  const isAuthUserComment = (commentId, authUserComments) => {\n    if (authUserComments.includes(commentId)) {\n      return (\n        <IconButton onClick={() => handleDelete(commentId) }>\n          <DeleteForeverIcon />\n        </IconButton>\n      )\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel elevation={2}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Comments</Typography>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelDetails className={classes.list}>\n          {commentsArr.map((comment, i) => (\n            <List className={classes.list}>\n              <ListItem className={classes.listItem}>\n                <Box className={classes.avatarHover} onClick={() => history.push(`/profile/${comment.author.userurl}`)}>\n                  <ListItemAvatar>\n                    <Avatar src={comment.author.profileImgUrl} />\n                  </ListItemAvatar>\n                </Box>\n                <ListItemText\n                  primary={<Typography variant=\"caption\">{`${comment.author.first_name} ${comment.author.last_name}`}</Typography>}\n                  secondary={<Typography variant=\"body1\">{comment.message}</Typography>}\n                />\n              {isAuthUserComment(comment._id, user.comments)}\n              </ListItem>\n              {i !== commentsArr.length - 1 ? (\n                <Divider variant=\"middle\" />\n              ) : null}\n            </List>\n          ))}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport {\n  Box,\n  Card,\n  Divider,\n  Typography,\n  makeStyles,\n  Avatar,\n  IconButton,\n} from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport { UserContext } from \"../../UserContext\";\nimport { AccessContext } from \"../../AccessContext\";\n\nimport CreateCommentDialog from \"../shared/CreateCommentDialog\";\nimport CommentAccordion from \"./CommentAccordion\";\n\nconst useStyles = makeStyles({\n  postComponentStyles: {\n    width: \"95%\",\n    marginBottom: \"3rem\",\n    border: \"1px solid black\",\n  },\n  avatarSmall: {\n    height: \"40px\",\n    width: \"40px\",\n    marginRight: \"1rem\",\n  },\n  posterInfo: {\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid black\",\n  },\n  postInteractions: {\n    display: \"flex\",\n    justifyContent: \"end\",\n  },\n  interactionButton: {\n    padding: 0,\n    margin: \"0 1rem\",\n  },\n  avatarContainer: {\n    cursor: \"pointer\"\n  }\n});\n\nconst PostCard = (props) => {\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleDelete = async (postId) => {\n    const response = await fetch(`http://localhost:5000/posts/${postId}/${user._id}`, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    response.json().then((res) => {\n      props.setDeletedPosts((deletedPosts) => [...deletedPosts, res]);\n      return console.log(res);\n    });\n  };\n\n  const handleLike = async (postId, userId) => {\n    const response = await fetch(\"http://localhost:5000/likes\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        postId,\n        userId,\n      }),\n    });\n    //send req. after that push liked post to liked post arr so state triggers reload.\n    //--TODO add a way to get likes for each post\n    response.json().then((res) => {\n      props.setLikes(res);\n      console.log(res);\n    });\n  };\n\n  const isAuthUsersPost = () => {\n    if (user._id === props.postAuthorId) {\n      return (\n        <IconButton\n          onClick={() => handleDelete(props.postId)}\n          className={classes.interactionButton}\n        >\n          <DeleteForeverIcon fontSize=\"small\" />\n        </IconButton>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <Card className={classes.postComponentStyles} elevation={5}>\n      <Box className={classes.posterInfo}>\n        <Box onClick={() => history.push(`/profile/${props.postProfileUrl}`)} className={classes.avatarContainer}>\n          <Avatar\n            className={classes.avatarSmall}\n            src={props.profilePic}\n            alt={`${props.firstName} ${props.lastName}`}\n          ></Avatar>\n        </Box>\n        <Typography variant=\"overline\">\n          {props.firstName} {props.lastName}\n        </Typography>\n      </Box>\n      {/* <Divider /> */}\n      <Box padding={1}>\n        <Typography variant=\"body1\" paragraph>\n          {props.post}\n        </Typography>\n        <Divider />\n        <Box className={classes.postInteractions}>\n          <CreateCommentDialog\n            postComments={props.postComments}\n            postId={props.postId}\n            refreshInfo={props.refreshInfo}\n            setRefreshInfo={props.setRefreshInfo}\n          />\n          <IconButton\n            onClick={() => handleLike(props.postId, user._id)}\n            className={classes.interactionButton}\n          >\n            <ThumbUpIcon fontSize=\"small\" />\n            {props.postLikes.length}\n          </IconButton>\n          {isAuthUsersPost()}\n        </Box>\n        <CommentAccordion postId={props.postId} token={accessToken} refreshInfo={props.refreshInfo} setRefreshInfo={props.setRefreshInfo} />\n      </Box>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nimport { Container, Paper, makeStyles, Divider, Box } from \"@material-ui/core\";\nimport PostCard from \"../../../shared/postCard\";\n\nconst useStyles = makeStyles({\n  timelineContainer: {\n    overflow: \"auto\",\n    paddingBottom: \"1rem\",\n    paddingTop: \"1rem\",\n  },\n\n  timelinePaper: {\n    backgroundColor: \"#ffffffbf\",\n  },\n  title: {\n    paddingLeft: \"1rem\",\n  },\n});\n\nconst DashTimeline = (props) => {\n  const postsArr = props.posts;\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.timelineContainer} maxWidth=\"md\">\n      <Paper className={classes.timelinePaper} elevation={15}>\n        <Divider />\n        <Box\n          paddingY={3}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n        >\n          {postsArr\n            .map((post, i) => (\n              <PostCard\n                key={`${post.author.first_name}_${post.author.last_name}_${post.author._id}_${i}`}\n                firstName={post.author.first_name}\n                lastName={post.author.last_name}\n                profilePic={post.author.profileImgUrl}\n                postAuthorId={post.author._id}\n                post={post.message}\n                setDeletedPosts={props.setDeletedPosts}\n                postId={post._id}\n                postLikes={post.likes}\n                postComments={post.comments}\n                setLikes={props.setLikes}\n                postProfileUrl={post.author.userurl}\n                refreshInfo={props.refreshInfo}\n                setRefreshInfo={props.setRefreshInfo}\n              />\n            ))\n            .reverse()}\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default DashTimeline;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Box, Paper, Typography } from \"@material-ui/core\";\nimport { UserContext } from \"../../../UserContext\";\nimport CreatePostDialog from \"../../shared/CreatePostDialog\";\nimport DashTimeline from \"../Dashboard/components/dashTimeline\";\nimport { AccessContext } from \"../../../AccessContext\";\n\nexport default function DashboardComponent() {\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n\n  const [posts, setPosts] = useState();\n  const [likes, setLikes] = useState([]);\n  const [deletedPosts, setDeletedPosts] = useState([]);\n  const [refreshInfo, setRefreshInfo] = useState(0);\n\n  useEffect(() => {\n    //define function\n    async function getPosts(url) {\n      const response = await fetch(url, {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      response\n        .json()\n        .then((res) => {\n          setPosts(res.posts);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n\n    getPosts(`http://localhost:5000/posts`);\n    //useEffect dependencies\n  }, [accessToken, deletedPosts, likes, refreshInfo]);\n\n  if (posts && posts.length > 0) {\n    return (\n      <Container>\n        <Box textAlign=\"center\">\n          <Typography variant=\"h6\">{`Hello, ${user.first_name}!`}</Typography>\n          <CreatePostDialog\n            refreshInfo={refreshInfo}\n            setRefreshInfo={setRefreshInfo}\n          />\n        </Box>\n        <DashTimeline\n          posts={posts}\n          deletedPosts={deletedPosts}\n          setDeletedPosts={setDeletedPosts}\n          setLikes={setLikes}\n          refreshInfo={refreshInfo}\n          setRefreshInfo={setRefreshInfo}\n        />\n      </Container>\n    );\n  } else {\n    return (\n      <Container>\n        <Box>{`Hello, ${user.first_name}!`}</Box>\n        <CreatePostDialog />\n        <Paper elevation={10}>\n          <Typography>Nothing to see here...</Typography>\n        </Paper>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Container,\n  makeStyles,\n  Box,\n  Paper,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\nimport PostCard from \"./postCard\";\n\nconst useStyles = makeStyles({\n  timelineContainer: {\n    overflow: \"auto\",\n    paddingBottom: \"3rem\",\n    paddingTop: \"1rem\",\n  },\n\n  timelinePaper: {\n    backgroundColor: \"#ffffffbf\",\n  },\n  title: {\n    paddingLeft: \"1rem\",\n  },\n});\n\nconst Timeline = (props) => {\n  const classes = useStyles();\n  const postsArr = props.posts;\n  return (\n    <Container className={classes.timelineContainer} maxWidth=\"md\">\n      <Paper className={classes.timelinePaper} elevation={15}>\n        <Typography className={classes.title} variant=\"overline\">\n          {props.firstName}'s Posts\n        </Typography>\n        <Divider />\n        <Box\n          paddingY={3}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n        >\n          {postsArr.map((post, i) => (\n            <PostCard\n              key={`${props.firstName}_${props.lastName}_${props.userId}_${i}`}\n              firstName={props.firstName}\n              lastName={props.lastName}\n              profilePic={props.profilePic}\n              postAuthorId={props.userId}\n              post={post.message}\n              postId={post._id}\n              deletedPosts={props.deletedPosts}\n              setDeletedPosts={props.setDeletedPosts}\n              postLikes={post.likes}\n              postComments={post.comments}\n              postProfileUrl={props.userurl}\n              likes={props.likes}\n              setLikes={props.setLikes}\n              refreshInfo={props.refreshInfo}\n              setRefreshInfo={props.setRefreshInfo}\n            />\n            \n          )).reverse()}\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Timeline;\n","import React, { useContext } from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\n\nimport { AccessContext } from \"../../AccessContext\";\n\nconst FriendButton = (props) => {\n  const { accessToken } = useContext(AccessContext);\n\n  const handleAddClick = async () => {\n    const response = await fetch(\"http://localhost:5000/users/sendFriendReq\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        profileUser: props.profileUser,\n        authUser: props.authUser,\n      })\n    })\n    response.json()\n    .then((res)=> {\n      console.log(res);\n    })\n    .catch((err)=> {\n      console.error(err);\n    })\n    //Change 'Add Friend' to a disafibled 'Requested' button\n  };\n\n  const handleAcceptClick = async () => {\n    const response = await fetch(\"http://localhost:5000/users/acceptFriendReq\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        profileUser: props.profileUser,\n        authUser: props.authUser,\n      })\n    })\n    response.json()\n    .then((res)=> {\n      console.log(res);\n    })\n    .catch((err)=> {\n      console.error(err);\n    })\n  };\n\n  const handleUnfriendClick = async () => {\n    const response = await fetch(\"http://localhost:5000/users/unfriend\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        profileUser: props.profileUser,\n        authUser: props.authUser,\n      })\n    })\n    response.json()\n    .then((res)=> {\n      console.log(res);\n    })\n    .catch((err)=> {\n      console.error(err);\n    })\n  };\n\n  //they are friends\n  if (props.current.includes(props.authUser)) {\n    return (\n      <Button onClick={handleUnfriendClick} variant=\"outlined\">\n        <Typography variant=\"caption\">Unfriend</Typography>\n      </Button>\n    );\n    //authUser has requested\n  } else if (props.pendIn.includes(props.authUser)) {\n    return (\n      <Button disabled variant=\"outlined\">\n        <Typography variant=\"caption\">Requested</Typography>\n      </Button>\n    );\n    //they have requested authUser\n  } else if (props.pendOut.includes(props.authUser)) {\n    return (\n      <Button onClick={handleAcceptClick} variant=\"outlined\">\n        <Typography variant=\"caption\">Accept Friend Request</Typography>\n      </Button>\n    );\n    //if profile page is not authUser's\n  } else if (props.profileUser !== props.authUser) {\n    return (\n      <Button onClick={handleAddClick} variant=\"outlined\">\n        <Typography variant=\"caption\">Add Friend</Typography>\n      </Button>\n    );\n  }\n  return null;\n};\n\nexport default FriendButton;\n","import React, { useContext, useState } from \"react\";\n\n// import { UserContext } from \"../../../../UserContext\";\nimport { AccessContext } from \"../../../../AccessContext\";\nimport {\n  FormLabel,\n  Button,\n  Input,\n  Box,\n  Container,\n  makeStyles,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\n\nasync function handleSubmit(url, img, token, refresh) {\n  const imageData = new FormData();\n  imageData.append(\"img\", img);\n\n  console.log(img);\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    mode: \"cors\",\n    credentials: \"include\",\n    headers: {\n      // \"Content-Type\": \"multipart/form-data\"\n      Authorization: `Bearer ${token}`,\n    },\n    body: imageData,\n  });\n  response\n    .json()\n    .then((res) => {\n      console.log(res);\n      console.log(\"end handleSubmit\");\n      refresh.setRefresh(refresh.refreshInfo + 1)\n    })\n    .catch((err) => console.log(\"Error\", err));\n}\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"min-width\",\n  },\n});\n\nconst EditProfileDialog = (props) => {\n  let [selection, setSelection] = useState();\n  const { accessToken } = useContext(AccessContext);\n\n  const classes = useStyles();\n\n  const selectionChangeHandler = (image) => {\n    setSelection(image);\n    console.log(image);\n    console.log(\"end selectionChangeHandler\");\n    console.log(selection);\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant=\"h6\" align=\"center\">\n        Upload Image\n      </Typography>\n      <Divider />\n      <Box margin=\"2rem auto\">\n        <FormLabel form=\"file\" htmlFor=\"file\">\n          Profile Picture\n        </FormLabel>\n        <div>\n          <Input\n            onChange={(e) => {\n              selectionChangeHandler(e.target.files[0]);\n            }}\n            type=\"file\"\n            name=\"file\"\n          />\n        </div>\n        <Button\n          onClick={(e) => {\n            handleSubmit(\n              \"http://localhost:5000/upload/s3ImgUpload\",\n              selection,\n              accessToken,\n              {setRefresh: props.setRefreshInfo, refreshInfo: props.refreshInfo}\n            );\n            props.handleClose();\n          }}\n        >\n          Upload Photo\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default EditProfileDialog;\n\n// http://localhost:5000/upload/s3ImgUpload\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  Box,\n  Typography,\n  makeStyles,\n  Container,\n  Avatar,\n  Dialog,\n  Button,\n} from \"@material-ui/core\";\n\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport CakeIcon from \"@material-ui/icons/Cake\";\nimport FriendButton from \"../../../shared/friendButton\";\nimport EditProfileDialog from \"./EditProfileDialog\";\n\nconst useStyles = makeStyles({\n  userCard: {\n    marginTop: \"1rem\",\n    display: \"flex\",\n  },\n  infoBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    width: \"100pc\",\n  },\n  fullName: {\n    alignSelf: \"center\",\n    textAlign: \"center\",\n  },\n  ageLocation: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n  avatarPic: {\n    height: \"160px\",\n    width: \"160px\",\n  },\n  friendButton: {\n    alignSelf: \"center\",\n  },\n});\n\nconst UserCard = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleEditProfileOpen = () => {\n    setOpen(true);\n  };\n\n  const handleEditProfileClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Card elevation={10} className={classes.userCard}>\n        <Avatar\n          className={classes.avatarPic}\n          variant=\"rounded\"\n          src={props.profilePic}\n          alt={`${props.firstName} ${props.lastName}`}\n        />\n        <Box className={classes.infoBox}>\n          <Box className={classes.fullName}>\n            <Typography variant=\"h6\">\n              {props.firstName} {props.lastName}\n            </Typography>\n          </Box>\n          <Box\n            margin=\"auto\"\n            onClick={() => props.setRefreshInfo(props.refreshInfo + 1)}\n            className={classes.friendButton}\n          >\n            <FriendButton\n              authUser={props.authUser}\n              profileUser={props.profileUser}\n              current={props.friendsCurrent}\n              pendIn={props.friendsPendIn}\n              pendOut={props.friendsPendOut}\n            />\n          </Box>\n          {props.age && props.city && props.state ? (\n            <Box className={classes.ageLocation}>\n              <Typography variant=\"subtitle\">\n                {props.age}\n                <CakeIcon />\n              </Typography>\n              <Typography>\n                {props.city}, {props.state}\n                <RoomIcon />\n              </Typography>\n            </Box>\n          ) : null}\n          {props.authUser === props.profileUser ? (\n            <Box margin=\"auto\">\n              <Button\n                onClick={() => handleEditProfileOpen()}\n                variant=\"contained\"\n              >\n                Edit Profile\n              </Button>\n              <Dialog open={open} onClose={handleEditProfileClose}>\n                <EditProfileDialog\n                  currAge={props.age}\n                  currCity={props.city}\n                  currState={props.state}\n                  handleClose={handleEditProfileClose}\n                  setRefreshInfo={props.setRefreshInfo}\n                  refreshInfo={props.refreshInfo}\n                />\n              </Dialog>\n            </Box>\n          ) : null}\n        </Box>\n      </Card>\n    </Container>\n  );\n};\n\nexport default UserCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Box, Typography } from \"@material-ui/core\";\nimport Timeline from \"../../shared/timeline\";\nimport UserCard from \"./components/userCard\";\nimport { AccessContext } from \"../../../AccessContext\";\nimport { UserContext } from \"../../../UserContext\";\n\nexport default function ProfileComponent() {\n  let { userurl } = useParams();\n\n  const { accessToken } = useContext(AccessContext);\n  const { user } = useContext(UserContext);\n  const [profileInfo, setProfileInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshInfo, setRefreshInfo] = useState(0)\n  const [deletedPosts, setDeletedPosts] = useState([])\n  const [likes, setLikes] = useState([])\n  const authId = user._id\n  \n  // Fetch the user information for the profile page\n  useEffect(() => {\n    async function getProfileInfo(url) {\n      const response = await fetch(url, {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      \n      response\n      .json()\n      .then((res) => {\n        setProfileInfo(res.result[0]);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    }\n    \n    getProfileInfo(`http://localhost:5000/users/find/${userurl}`);\n    //useEffect dependencies\n  }, [userurl, accessToken, refreshInfo, deletedPosts, likes]);\n\n  if (profileInfo === undefined) {\n    return <Typography>Not found...</Typography>;\n  }\n  \n  if (isLoading) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  return (\n    <Container disableGutters maxWidth=\"xl\">\n      <UserCard\n        age={profileInfo.age}\n        firstName={profileInfo.first_name}\n        lastName={profileInfo.last_name}\n        city={profileInfo.city}\n        state={profileInfo.state}\n        profilePic={profileInfo.profileImgUrl}\n        // friendButton props\n        friendsCurrent={profileInfo.friends.current}\n        friendsPendIn={profileInfo.friends.pendIn}\n        friendsPendOut={profileInfo.friends.pendOut}\n        profileUser={profileInfo._id}\n        setRefreshInfo={setRefreshInfo}\n        refreshInfo={refreshInfo}\n        authUser={authId}\n      />\n      <Box>\n      {/* if not friends, hide timeline.-----> { profileInfo.friends.current.includes(user._id) || profileInfo._id === user._id ? : null*/}\n        <Timeline\n          profilePic={profileInfo.profileImgUrl}\n          posts={profileInfo.posts.map((post) => post)}\n          firstName={profileInfo.first_name}\n          lastName={profileInfo.last_name}\n          userId={profileInfo._id}\n          deletedPosts={deletedPosts}\n          setDeletedPosts={setDeletedPosts}\n          userurl={profileInfo.userurl}\n          likes={likes}\n          setLikes={setLikes}\n          refreshInfo={refreshInfo}\n          setRefreshInfo={setRefreshInfo}\n        />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Avatar,\n  makeStyles,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport FriendButton from \"../../../shared/friendButton\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  cardStyles: {\n    height: \"15rem\",\n    width: \"15rem\",\n  },\n\n  avatarPic: {\n    height: \"125px\",\n    width: \"125px\",\n    margin: \"1rem auto\",\n    cursor: \"pointer\",\n  },\n\n  friendButton: {\n    margin: \"auto\",\n    textAlign: \"center\"\n  }\n});\n\nconst UserIndexCard = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Card className={classes.cardStyles}>\n      <Box onClick={() => history.push(`/profile/${props.profileUrl}`)}>\n      <Avatar src={props.profilePic} className={classes.avatarPic} />\n      </Box>\n      <Typography align=\"center\">{`${props.first_name} ${props.last_name}`}</Typography>\n      <Box className={classes.friendButton} onClick={() => props.setPageUpdates(props.pageUpdates + 1)}>\n        <FriendButton\n          authUser={props.authUser}\n          profileUser={props.profileUser}\n          current={props.friendsCurrent}\n          pendIn={props.friendsPendIn}\n          pendOut={props.friendsPendOut}\n        />\n      </Box>\n    </Card>\n  );\n};\n\nexport default UserIndexCard;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles, Grid, Typography } from \"@material-ui/core\";\n\nimport { UserContext } from \"../../../UserContext\";\nimport { AccessContext } from \"../../../AccessContext\";\nimport UserIndexCard from \"./components/UserIndexCard\";\n\nconst useStyles = makeStyles({\n  UserIndexContainer: {},\n});\n\nconst UserIndex = (props) => {\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n  const [users, setUsers] = useState([]);\n  const [pageUpdates, setPageUpdates] = useState(0);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const getAllUsers = async () => {\n      const response = await fetch(\"http://localhost:5000/users\", {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      response.json().then((res) => {\n        console.log(res);\n        setUsers(res);\n      });\n    };\n\n    getAllUsers();\n  }, [accessToken, pageUpdates]);\n\n  if (users.length !== 0) {\n    return (\n      <Grid\n        sm=\"12\"\n        spacing=\"5\"\n        justify=\"center\"\n        container\n        className={classes.UserIndexContainer}\n      >\n        {users.map((selected, i) => {\n          if (selected._id !== user._id) {\n            return (\n              <Grid item>\n                <UserIndexCard\n                  first_name={selected.first_name}\n                  last_name={selected.last_name}\n                  pageUpdates={pageUpdates}\n                  setPageUpdates={setPageUpdates}\n                  authUser={user._id}\n                  profileUser={selected._id}\n                  profilePic={selected.profileImgUrl}\n                  friendsCurrent={selected.friends.current}\n                  friendsPendOut={selected.friends.pendOut}\n                  friendsPendIn={selected.friends.pendIn}\n                  profileUrl={selected.userurl}\n                />\n              </Grid>\n            );\n            \n          }\n          return null\n        })}\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid\n      sm=\"12\"\n      spacing=\"5\"\n      justify=\"center\"\n      container\n      className={classes.UserIndexContainer}\n    >\n      <Grid item>\n        <Typography variant=\"h4\">{\"Loading..\"}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default UserIndex;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport AuthLanding from \"./Components/Pages/Landing/AuthLanding\";\nimport Layout from \"./Components/shared/Layout\";\nimport DashboardComponent from \"./Components/Pages/Dashboard/dashboard\";\nimport ProfileComponent from \"./Components/Pages/Profile/Profile\";\n\nimport { UserContext } from \"./UserContext\";\nimport { AccessContext } from \"./AccessContext\";\nimport { Typography } from \"@material-ui/core\";\nimport UserIndex from \"./Components/Pages/UserIndex/UserIndex\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function checkLoggedIn() {\n      const response = await fetch(\"http://localhost:4000/userauth/curruser\", {\n        method: \"POST\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      response.json().then((data) => {\n        let currUser = data.user;\n        console.log(currUser);\n        setUser(currUser);\n        setAccessToken(data.token);\n        setIsLoading(false);\n      });\n    }\n    if (!document.cookie.includes(\"loggedIn=true\")) {\n      setIsLoading(false);\n    } else if (user == null) {\n      console.log(document.cookie.includes(\"loggedIn=true\"));\n      checkLoggedIn();\n    }\n  }, [user]);\n\n  if (isLoading) {\n    return <Typography>Loading...</Typography>;\n  }\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <AccessContext.Provider value={{ accessToken, setAccessToken }}>\n        <Layout />\n        {user && accessToken ? (\n          <Switch>\n            <Route\n              path=\"/auth\"\n              render={() => <h1>You're already logged in</h1>}\n            />\n            <Route path=\"/logout\" render={() => <h1>Logout route works</h1>} />\n            <Route\n              path=\"/profile/:userurl\"\n              exact\n              children={<ProfileComponent />}\n            />\n            <Route path=\"/dashboard\" children={<DashboardComponent />} />\n            <Route path=\"/userIndex\" children={<UserIndex />} />\n            <Route path=\"/\" exact render={() => <Redirect to=\"/dashboard\" />} />\n            <Route path=\"*\" render={() => <h1>404 Not Found</h1>} />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path=\"/\" children={<AuthLanding />} />\n            <Redirect to=\"/\" />\n          </Switch>\n        )}\n      </AccessContext.Provider>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}