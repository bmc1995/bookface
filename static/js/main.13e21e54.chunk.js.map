{"version":3,"sources":["UserContext.js","AccessContext.js","Components/Pages/Landing/components/signUpForm.js","Components/Pages/Landing/components/signInForm.js","Components/Pages/Landing/AuthLanding.js","Components/shared/Header/Header.js","Components/shared/Layout.js","Components/shared/CreatePostDialog.js","Components/shared/CreateCommentDialog.js","Components/shared/CommentAccordion.js","Components/shared/postCard.js","Components/Pages/Dashboard/components/dashTimeline.js","Components/Pages/Dashboard/dashboard.js","Components/shared/timeline.js","Components/shared/friendButton.js","Components/Pages/Profile/components/EditProfileDialog.js","Components/Pages/Profile/components/userCard.js","Components/Pages/Profile/Profile.js","Components/Pages/UserIndex/components/UserIndexCard.js","Components/Pages/UserIndex/UserIndex.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","user","setUser","AccessContext","accessToken","setAccessToken","useStyles","makeStyles","signInContainer","textAlign","padding","margin","MyTextField","placeholder","type","props","useField","field","meta","errorText","error","touched","TextField","helperText","variant","label","validationSchema","yup","first_name","required","max","last_name","email","password","matches","userurl","lowercase","passwordConfirm","test","value","parent","url","data","a","fetch","method","mode","credentials","headers","body","JSON","stringify","json","then","console","log","catch","err","SignUpForm","classes","Box","className","initialValues","onSubmit","setSubmitting","resetForm","handleSubmit","isSubmitting","Typography","name","Button","disabled","display","flexDirection","justifyContent","width","SignInForm","history","useHistory","useContext","useState","signUpOpen","setSignUpOpen","handleDialogClose","values","currUser","Object","entries","token","push","color","onClick","Dialog","fullWidth","open","onClose","handleClose","AuthLanding","paddingTop","Paper","elevation","HeaderComponent","React","anchorEl","setAnchorEl","AppBar","position","Toolbar","IconButton","edge","aria-label","e","currentTarget","Menu","id","keepMounted","Boolean","MenuItem","component","Link","to","children","document","cookie","title","Layout","Header","multiline","message","min","trim","CreatePostDialog","setOpen","setRefreshInfo","refreshInfo","userId","_id","DialogContent","DialogActions","interactionButton","CreateCommentDialog","Authorization","fontSize","postComments","length","author","postId","theme","root","heading","typography","pxToRem","fontWeight","fontWeightRegular","list","listItem","avatarHover","cursor","SimpleExpansionPanel","commentsArr","setCommentsArr","useEffect","res","comments","getComments","handleDelete","commentId","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Divider","ExpansionPanelDetails","map","comment","i","List","ListItem","ListItemAvatar","Avatar","src","profileImgUrl","ListItemText","primary","secondary","authUserComments","includes","isAuthUserComment","postComponentStyles","marginBottom","border","avatarSmall","height","marginRight","posterInfo","alignItems","borderBottom","postInteractions","avatarContainer","PostCard","setDeletedPosts","deletedPosts","handleLike","setLikes","Card","postProfileUrl","profilePic","alt","firstName","lastName","paragraph","post","postLikes","postAuthorId","timelineContainer","overflow","paddingBottom","timelinePaper","backgroundColor","paddingLeft","DashTimeline","postsArr","posts","Container","maxWidth","paddingY","key","likes","reverse","DashboardComponent","setPosts","getPosts","Timeline","FriendButton","handleAddClick","profileUser","authUser","handleAcceptClick","handleUnfriendClick","current","pendIn","pendOut","img","refresh","imageData","FormData","append","setRefresh","container","EditProfileDialog","selection","setSelection","align","FormLabel","form","htmlFor","Input","onChange","image","target","files","userCard","marginTop","infoBox","fullName","alignSelf","ageLocation","avatarPic","friendButton","UserCard","handleEditProfileClose","friendsCurrent","friendsPendIn","friendsPendOut","age","city","state","currAge","currCity","currState","ProfileComponent","useParams","profileInfo","setProfileInfo","isLoading","setIsLoading","authId","result","getProfileInfo","undefined","disableGutters","friends","cardStyles","UserIndexCard","profileUrl","setPageUpdates","pageUpdates","UserIndexContainer","UserIndex","users","setUsers","getAllUsers","Grid","sm","spacing","justify","selected","item","App","checkLoggedIn","Provider","path","render","exact","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13e21e54.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const UserContext = createContext({\n  user: null,\n  setUser: () => {},\n});\n","import { createContext } from \"react\";\n\nexport const AccessContext = createContext({\n  accessToken: null,\n  setAccessToken: () => {},\n});\n","import React from \"react\";\n\nimport {\n  TextField,\n  Button,\n  Box,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Formik, useField, Form } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\n\nconst useStyles = makeStyles({\n  signInContainer: {\n    textAlign: \"center\",\n    \"& Form\": {\n      padding: \"1rem\",\n      \"& div\": {\n        margin: \"0.5rem auto\",\n      },\n    },\n  },\n});\n\nconst MyTextField = ({ placeholder, type, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      type={type}\n      helperText={errorText}\n      error={!!errorText}\n      variant=\"outlined\"\n      label={placeholder}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  first_name: yup.string().required().max(35),\n  last_name: yup.string().required().max(35),\n  email: yup.string().required().email(\"Please enter a valid email\"),\n  password: yup\n    .string()\n    .required()\n    .matches(\n      /^[a-zA-Z0-9_\\-]{4,}$/m,\n      \"Must be atleast 4 characters, alphanumeric.\"\n    ),\n  userurl: yup\n    .string()\n    .required()\n    .lowercase()\n    .matches(/^[a-zA-Z_\\-]{5,}$/m, \"Must be atleast 5 characters, letters\"),\n  passwordConfirm: yup\n    .string()\n    .required()\n    .test(\"passwords-match\", \"Passwords don't match\", (value) => {\n      return this.parent.password === value;\n    }),\n});\n\nasync function handleSubmit(url, data) {\n  const response = await fetch(url, {\n    method: \"POST\",\n    mode: \"cors\",\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  response\n    .json()\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nconst SignUpForm = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.signInContainer}>\n      <Formik\n        initialValues={{\n          first_name: \"\",\n          last_name: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirm: \"\",\n          userurl: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(data, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          handleSubmit(\n            \"https://bookface-auth.herokuapp.com/userauth/signup\",\n            data\n          );\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Box>\n            <Typography variant=\"h6\">Sign Up</Typography>\n            <Form>\n            <div>\n              <MyTextField\n                placeholder=\"First Name..\"\n                name=\"first_name\"\n                type=\"text\"\n              />\n              </div>\n              <div>\n                <MyTextField\n                  placeholder=\"Last Name..\"\n                  name=\"last_name\"\n                  type=\"text\"\n                />\n              </div>\n              <div>\n                <MyTextField placeholder=\"E-mail..\" name=\"email\" type=\"email\" />\n              </div>\n              <div>\n                <MyTextField\n                  placeholder=\"Password..\"\n                  name=\"password\"\n                  type=\"password\"\n                />\n              </div>\n              <div>\n                <MyTextField\n                  placeholder=\"Confirm Password..\"\n                  name=\"passwordConfirm\"\n                  type=\"password\"\n                />\n              </div>\n              <div>\n                <MyTextField\n                  placeholder=\"Profile Url\"\n                  name=\"userurl\"\n                  type=\"text\"\n                />\n              </div>\n              <div>\n                <Button disabled={isSubmitting} type=\"submit\">\n                  submit\n                </Button>\n              </div>\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre>\n            <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n            </Form>\n          </Box>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default SignUpForm;\n","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { TextField, Button, Box, makeStyles, Dialog } from \"@material-ui/core\";\nimport { Formik, useField, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { UserContext } from \"../../../../UserContext\";\nimport { AccessContext } from \"../../../../AccessContext\";\nimport SignUpForm from \"./signUpForm\";\n\nconst useStyles = makeStyles({\n  signInContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    width: \"20rem\",\n    textAlign: \"center\",\n    \"& Form\": {\n      padding: \"1rem\",\n      \"& div\": {\n        margin: \"0.5rem auto\",\n      },\n    },\n  },\n});\n\nconst MyTextField = ({ placeholder, type, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      type={type}\n      helperText={errorText}\n      error={!!errorText}\n      variant=\"outlined\"\n      label={placeholder}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  email: yup.string().required().email(\"Must be a valid e-mail\"),\n  password: yup.string().required(),\n});\n\nconst SignInForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { setUser } = useContext(UserContext);\n  const { setAccessToken } = useContext(AccessContext);\n  const [signUpOpen, setSignUpOpen] = useState(false)\n\n  const handleDialogOpen = () => {\n    setSignUpOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setSignUpOpen(false);\n  };\n\n  async function handleSubmit(url, values) {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    });\n    response\n      .json()\n      .then((data) => {\n        //extract access token from response\n        //extract user object from response\n        let currUser = Object.entries(data.user)[0][1];\n        console.log(currUser);\n        setUser(currUser);\n        setAccessToken(data.token);\n        history.push(\"/dashboard\");\n      })\n      .catch((error) => {\n        return console.error(error);\n      });\n  }\n\n  return (\n    <Box className={classes.signInContainer}>\n      <h1>Sign in</h1>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(data, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          handleSubmit(\"https://bookface-auth.herokuapp.com/userauth/login\", data);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Box>\n            <Form>\n              <div>\n                <MyTextField placeholder=\"E-mail..\" name=\"email\" type=\"email\" />\n              </div>\n              <div>\n                <MyTextField\n                  placeholder=\"Password..\"\n                  name=\"password\"\n                  type=\"password\"\n                />\n              </div>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={isSubmitting}\n                type=\"submit\"\n              >\n                submit\n              </Button>\n            </Form>\n          </Box>\n        )}\n      </Formik>\n      <p>\n        Not a member?{\" \"}\n        <Button onClick={handleDialogOpen} color=\"primary\" variant=\"text\">\n          Sign Up!\n        </Button>\n      </p>\n      <Dialog fullWidth open={signUpOpen} onClose={handleDialogClose}>\n          <SignUpForm handleClose={() => handleDialogClose()} />\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default SignInForm;\n","import React from \"react\";\nimport SignInForm from \"./components/signInForm\";\nimport { Paper, Box } from \"@material-ui/core\";\n\n\nconst AuthLanding = () => {\n\n    return (\n      <Box paddingTop=\"2rem\" display=\"flex\" justifyContent=\"center\">\n        <Paper elevation={5}>\n        <SignInForm />\n        </Paper>\n      </Box>\n    );\n  }\n\nexport default AuthLanding;\n","import React, { useContext } from \"react\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Menu,\n  IconButton,\n  Typography,\n  MenuItem,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../../UserContext\";\nimport { AccessContext } from \"../../../AccessContext\";\n\nconst HeaderComponent = () => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const { user, setUser } = useContext(UserContext);\n  const { setAccessToken } = useContext(AccessContext)\n\n  const clickHandler = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    //remove loggedIn cookie then set accessToken and user to null\n    document.cookie = \"loggedIn=true; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    setAccessToken(null)\n    setUser(null)\n    handleClose()\n  }\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {/* Render menu if user logged in */}\n        {user ? (\n          <>\n            <IconButton\n              edge=\"start\"\n              className=\"navMenuButton\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={(e) => clickHandler(e)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                to=\"/dashboard\"\n                onClick={handleClose}\n              >\n                Timeline\n              </MenuItem>\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                to={\"/userIndex\"}\n                onClick={handleClose}\n              >\n                User List\n              </MenuItem>\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                children={Link}\n                to={`/profile/${user.userurl}`}\n                onClick={handleClose}\n              >\n                My Profile\n              </MenuItem>\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                to={`/profile/${user.first_name}${user.last_name}/edit`}\n                onClick={handleClose}\n              >\n                Edit Profile\n              </MenuItem>\n              <MenuItem\n                color=\"textPrimary\"\n                component={Link}\n                onClick={handleLogout}\n              >\n                Logout\n              </MenuItem>\n            </Menu>\n          </>\n        ) : null}\n        <Typography variant=\"h6\" color=\"inherit\">\n          {document.title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HeaderComponent;","import React from \"react\";\n\nimport HeaderComponent from \"./Header/Header\";\n\nconst Layout = () => {\n  return (\n    <div>\n      <HeaderComponent />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useContext } from \"react\";\nimport {\n  TextField,\n  Dialog,\n  Button,\n  Box,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { Form, useField, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { UserContext } from \"../../UserContext\";\nimport { AccessContext } from \"../../AccessContext\";\n\nconst MyTextField = ({ placeholder, type, label, multiline, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      type={type}\n      helperText={errorText}\n      error={!!errorText}\n      variant=\"outlined\"\n      placeholder={placeholder}\n      label={label}\n      multiline={multiline}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  message: yup\n    .string()\n    .required(\"Post cannot be empty.\")\n    .min(5, \"Post must be atleast 5 characters.\")\n    .trim(),\n});\n\nconst CreatePostDialog = (props) => {\n  const [open, setOpen] = useState(false);\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  //AUTH WORKS!!!!!!!!!!!!!!!!!!!!!!!!! 7/23/20 22:11\n  const handleSubmit = async (url, values) => {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(values),\n    });\n    response.json().then((data) => {\n      console.log(data)\n      handleClose()\n      props.setRefreshInfo(props.refreshInfo + 1)\n    })\n  };\n\n  // async function handlePostSubmit(url, value) {\n  //   const response = \"hi\";\n  // }\n\n  return (\n    <Box>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n        Create new post\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <Formik\n          initialValues={{\n            message: \"\",\n            userId: user._id\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(data, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            handleSubmit(\"https://bookymcbookface.herokuapp.com/posts/create\", data);\n            resetForm();\n            setSubmitting(false);\n          }}\n        >\n          {({ isSubmitting }) => (\n            <>\n              <Form>\n                <DialogContent>\n                  <MyTextField\n                    placeholder=\"What's goin' on?\"\n                    name=\"message\"\n                    multiline={true}\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button color=\"primary\" disabled={isSubmitting} type=\"submit\">\n                    Post\n                  </Button>\n                </DialogActions>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CreatePostDialog;\n","import React, { useState, useContext } from \"react\";\nimport {\n  TextField,\n  Dialog,\n  Button,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { Form, useField, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { UserContext } from \"../../UserContext\";\nimport { AccessContext } from \"../../AccessContext\";\n\nconst useStyles = makeStyles({\n  interactionButton: {\n    padding: \"0\",\n    margin: \"0\",\n  },\n});\n\nconst MyTextField = ({ placeholder, type, label, multiline, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      type={type}\n      helperText={errorText}\n      error={!!errorText}\n      variant=\"outlined\"\n      placeholder={placeholder}\n      label={label}\n      multiline={multiline}\n    />\n  );\n};\n\nconst validationSchema = yup.object({\n  message: yup.string().required(\"Comment cannot be empty.\").trim(),\n});\n\nconst CreateCommentDialog = (props) => {\n  const [open, setOpen] = useState(false);\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  //AUTH WORKS!!!!!!!!!!!!!!!!!!!!!!!!! 7/23/20 22:11\n  const handleSubmit = async (url, values) => {\n    const response = await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify(values),\n    });\n    response.json().then((data) => {\n      console.log(data);\n    });\n  };\n\n  // async function handlePostSubmit(url, value) {\n  //   const response = \"hi\";\n  // }\n\n  return (\n    <>\n      <IconButton\n        className={classes.interactionButton}\n        onClick={handleClickOpen}\n      >\n        <ChatBubbleIcon fontSize=\"small\" />\n        {props.postComments.length}\n      </IconButton>\n      <Dialog open={open} onClose={handleClose}>\n        <Formik\n          initialValues={{\n            author: `${user._id}`,\n            message: \"\",\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(data, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            handleSubmit(\n              `https://bookymcbookface.herokuapp.com/comments/${props.postId}`,\n              data\n            );\n            resetForm();\n            setSubmitting(false);\n            handleClose();\n            props.setRefreshInfo(props.refreshInfo + 1);\n          }}\n        >\n          {({ isSubmitting }) => (\n            <>\n              <Form>\n                <DialogContent>\n                  <MyTextField\n                    placeholder=\"Type your comment..\"\n                    name=\"message\"\n                    multiline={true}\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button color=\"primary\" disabled={isSubmitting} type=\"submit\">\n                    Post\n                  </Button>\n                </DialogActions>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CreateCommentDialog;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Divider,\n  Box,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../UserContext\"; \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  list: {\n    display: \"inline\",\n    width: \"100%\",\n  },\n  listItem: {\n    margin: \"2px 0\",\n  },\n  avatarHover: {\n    cursor: \"pointer\"\n  }\n}));\n\n//comment accordion\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n  const [commentsArr, setCommentsArr] = useState([]);\n  const history = useHistory()\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    const getComments = async (postId, token) => {\n      const response = await fetch(`https://bookymcbookface.herokuapp.com/comments/${postId}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      response.json().then((res) => {\n        setCommentsArr(res.comments);\n      });\n    };\n\n    getComments(props.postId, props.token);\n  }, [props.postId, props.token, props.refreshInfo]);\n\n\n  const handleDelete = async (commentId) => {\n    const response = await fetch(`https://bookymcbookface.herokuapp.com/comments/${props.postId}/${commentId}`, {\n        method: \"DELETE\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${props.token}`,\n        },\n      });\n      response.json()\n      .then((res) => {\n        console.log(res)\n        props.setRefreshInfo(props.refreshInfo + 1)\n      })\n  }\n\n  const isAuthUserComment = (commentId, authUserComments) => {\n    if (authUserComments.includes(commentId)) {\n      return (\n        <IconButton onClick={() => handleDelete(commentId) }>\n          <DeleteForeverIcon />\n        </IconButton>\n      )\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel elevation={2}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Comments</Typography>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelDetails className={classes.list}>\n          {commentsArr.map((comment, i) => (\n            <List className={classes.list}>\n              <ListItem className={classes.listItem}>\n                <Box className={classes.avatarHover} onClick={() => history.push(`/profile/${comment.author.userurl}`)}>\n                  <ListItemAvatar>\n                    <Avatar src={comment.author.profileImgUrl} />\n                  </ListItemAvatar>\n                </Box>\n                <ListItemText\n                  primary={<Typography variant=\"caption\">{`${comment.author.first_name} ${comment.author.last_name}`}</Typography>}\n                  secondary={<Typography variant=\"body1\">{comment.message}</Typography>}\n                />\n              {isAuthUserComment(comment._id, user.comments)}\n              </ListItem>\n              {i !== commentsArr.length - 1 ? (\n                <Divider variant=\"middle\" />\n              ) : null}\n            </List>\n          ))}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport {\n  Box,\n  Card,\n  Divider,\n  Typography,\n  makeStyles,\n  Avatar,\n  IconButton,\n} from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport { UserContext } from \"../../UserContext\";\nimport { AccessContext } from \"../../AccessContext\";\n\nimport CreateCommentDialog from \"../shared/CreateCommentDialog\";\nimport CommentAccordion from \"./CommentAccordion\";\n\nconst useStyles = makeStyles({\n  postComponentStyles: {\n    width: \"95%\",\n    marginBottom: \"3rem\",\n    border: \"1px solid black\",\n  },\n  avatarSmall: {\n    height: \"40px\",\n    width: \"40px\",\n    marginRight: \"1rem\",\n  },\n  posterInfo: {\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid black\",\n  },\n  postInteractions: {\n    display: \"flex\",\n    justifyContent: \"end\",\n  },\n  interactionButton: {\n    padding: 0,\n    margin: \"0 1rem\",\n  },\n  avatarContainer: {\n    cursor: \"pointer\"\n  }\n});\n\nconst PostCard = (props) => {\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleDelete = async (postId) => {\n    const response = await fetch(`https://bookymcbookface.herokuapp.com/posts/${postId}/${user._id}`, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    response.json().then((res) => {\n      props.setDeletedPosts((deletedPosts) => [...deletedPosts, res]);\n      return console.log(res);\n    });\n  };\n\n  const handleLike = async (postId, userId) => {\n    const response = await fetch(\"https://bookymcbookface.herokuapp.com/likes\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        postId,\n        userId,\n      }),\n    });\n    //send req. after that push liked post to liked post arr so state triggers reload.\n    //--TODO add a way to get likes for each post\n    response.json().then((res) => {\n      props.setLikes(res);\n      console.log(res);\n    });\n  };\n\n  const isAuthUsersPost = () => {\n    if (user._id === props.postAuthorId) {\n      return (\n        <IconButton\n          onClick={() => handleDelete(props.postId)}\n          className={classes.interactionButton}\n        >\n          <DeleteForeverIcon fontSize=\"small\" />\n        </IconButton>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <Card className={classes.postComponentStyles} elevation={5}>\n      <Box className={classes.posterInfo}>\n        <Box onClick={() => history.push(`/profile/${props.postProfileUrl}`)} className={classes.avatarContainer}>\n          <Avatar\n            className={classes.avatarSmall}\n            src={props.profilePic}\n            alt={`${props.firstName} ${props.lastName}`}\n          ></Avatar>\n        </Box>\n        <Typography variant=\"overline\">\n          {props.firstName} {props.lastName}\n        </Typography>\n      </Box>\n      {/* <Divider /> */}\n      <Box padding={1}>\n        <Typography variant=\"body1\" paragraph>\n          {props.post}\n        </Typography>\n        <Divider />\n        <Box className={classes.postInteractions}>\n          <CreateCommentDialog\n            postComments={props.postComments}\n            postId={props.postId}\n            refreshInfo={props.refreshInfo}\n            setRefreshInfo={props.setRefreshInfo}\n          />\n          <IconButton\n            onClick={() => handleLike(props.postId, user._id)}\n            className={classes.interactionButton}\n          >\n            <ThumbUpIcon fontSize=\"small\" />\n            {props.postLikes.length}\n          </IconButton>\n          {isAuthUsersPost()}\n        </Box>\n        <CommentAccordion postId={props.postId} token={accessToken} refreshInfo={props.refreshInfo} setRefreshInfo={props.setRefreshInfo} />\n      </Box>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nimport { Container, Paper, makeStyles, Divider, Box } from \"@material-ui/core\";\nimport PostCard from \"../../../shared/postCard\";\n\nconst useStyles = makeStyles({\n  timelineContainer: {\n    overflow: \"auto\",\n    paddingBottom: \"1rem\",\n    paddingTop: \"1rem\",\n  },\n\n  timelinePaper: {\n    backgroundColor: \"#ffffffbf\",\n  },\n  title: {\n    paddingLeft: \"1rem\",\n  },\n});\n\nconst DashTimeline = (props) => {\n  const postsArr = props.posts;\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.timelineContainer} maxWidth=\"md\">\n      <Paper className={classes.timelinePaper} elevation={15}>\n        <Divider />\n        <Box\n          paddingY={3}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n        >\n          {postsArr\n            .map((post, i) => (\n              <PostCard\n                key={`${post.author.first_name}_${post.author.last_name}_${post.author._id}_${i}`}\n                firstName={post.author.first_name}\n                lastName={post.author.last_name}\n                profilePic={post.author.profileImgUrl}\n                postAuthorId={post.author._id}\n                post={post.message}\n                setDeletedPosts={props.setDeletedPosts}\n                postId={post._id}\n                postLikes={post.likes}\n                postComments={post.comments}\n                setLikes={props.setLikes}\n                postProfileUrl={post.author.userurl}\n                refreshInfo={props.refreshInfo}\n                setRefreshInfo={props.setRefreshInfo}\n              />\n            ))\n            .reverse()}\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default DashTimeline;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Container, Box, Paper, Typography } from \"@material-ui/core\";\nimport { UserContext } from \"../../../UserContext\";\nimport CreatePostDialog from \"../../shared/CreatePostDialog\";\nimport DashTimeline from \"../Dashboard/components/dashTimeline\";\nimport { AccessContext } from \"../../../AccessContext\";\n\nexport default function DashboardComponent() {\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n\n  const [posts, setPosts] = useState();\n  const [likes, setLikes] = useState([]);\n  const [deletedPosts, setDeletedPosts] = useState([]);\n  const [refreshInfo, setRefreshInfo] = useState(0);\n\n  useEffect(() => {\n    //define function\n    async function getPosts(url) {\n      const response = await fetch(url, {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      response\n        .json()\n        .then((res) => {\n          setPosts(res.posts);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n\n    getPosts(`https://bookymcbookface.herokuapp.com/posts`);\n    //useEffect dependencies\n  }, [accessToken, deletedPosts, likes, refreshInfo]);\n\n  if (posts && posts.length > 0) {\n    return (\n      <Container>\n        <Box textAlign=\"center\">\n          <Typography variant=\"h6\">{`Hello, ${user.first_name}!`}</Typography>\n          <CreatePostDialog\n            refreshInfo={refreshInfo}\n            setRefreshInfo={setRefreshInfo}\n          />\n        </Box>\n        <DashTimeline\n          posts={posts}\n          deletedPosts={deletedPosts}\n          setDeletedPosts={setDeletedPosts}\n          setLikes={setLikes}\n          refreshInfo={refreshInfo}\n          setRefreshInfo={setRefreshInfo}\n        />\n      </Container>\n    );\n  } else {\n    return (\n      <Container>\n        <Box>{`Hello, ${user.first_name}!`}</Box>\n        <CreatePostDialog />\n        <Paper elevation={10}>\n          <Typography>Nothing to see here...</Typography>\n        </Paper>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Container,\n  makeStyles,\n  Box,\n  Paper,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\nimport PostCard from \"./postCard\";\n\nconst useStyles = makeStyles({\n  timelineContainer: {\n    overflow: \"auto\",\n    paddingBottom: \"3rem\",\n    paddingTop: \"1rem\",\n  },\n\n  timelinePaper: {\n    backgroundColor: \"#ffffffbf\",\n  },\n  title: {\n    paddingLeft: \"1rem\",\n  },\n});\n\nconst Timeline = (props) => {\n  const classes = useStyles();\n  const postsArr = props.posts;\n  return (\n    <Container className={classes.timelineContainer} maxWidth=\"md\">\n      <Paper className={classes.timelinePaper} elevation={15}>\n        <Typography className={classes.title} variant=\"overline\">\n          {props.firstName}'s Posts\n        </Typography>\n        <Divider />\n        <Box\n          paddingY={3}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n        >\n          {postsArr.map((post, i) => (\n            <PostCard\n              key={`${props.firstName}_${props.lastName}_${props.userId}_${i}`}\n              firstName={props.firstName}\n              lastName={props.lastName}\n              profilePic={props.profilePic}\n              postAuthorId={props.userId}\n              post={post.message}\n              postId={post._id}\n              deletedPosts={props.deletedPosts}\n              setDeletedPosts={props.setDeletedPosts}\n              postLikes={post.likes}\n              postComments={post.comments}\n              postProfileUrl={props.userurl}\n              likes={props.likes}\n              setLikes={props.setLikes}\n              refreshInfo={props.refreshInfo}\n              setRefreshInfo={props.setRefreshInfo}\n            />\n            \n          )).reverse()}\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Timeline;\n","import React, { useContext } from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\n\nimport { AccessContext } from \"../../AccessContext\";\n\nconst FriendButton = (props) => {\n  const { accessToken } = useContext(AccessContext);\n\n  const handleAddClick = async () => {\n    const response = await fetch(\"https://bookymcbookface.herokuapp.com/users/sendFriendReq\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        profileUser: props.profileUser,\n        authUser: props.authUser,\n      })\n    })\n    response.json()\n    .then((res)=> {\n      console.log(res);\n    })\n    .catch((err)=> {\n      console.error(err);\n    })\n    //Change 'Add Friend' to a disafibled 'Requested' button\n  };\n\n  const handleAcceptClick = async () => {\n    const response = await fetch(\"https://bookymcbookface.herokuapp.com/users/acceptFriendReq\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        profileUser: props.profileUser,\n        authUser: props.authUser,\n      })\n    })\n    response.json()\n    .then((res)=> {\n      console.log(res);\n    })\n    .catch((err)=> {\n      console.error(err);\n    })\n  };\n\n  const handleUnfriendClick = async () => {\n    const response = await fetch(\"https://bookymcbookface.herokuapp.com/users/unfriend\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        profileUser: props.profileUser,\n        authUser: props.authUser,\n      })\n    })\n    response.json()\n    .then((res)=> {\n      console.log(res);\n    })\n    .catch((err)=> {\n      console.error(err);\n    })\n  };\n\n  //they are friends\n  if (props.current.includes(props.authUser)) {\n    return (\n      <Button onClick={handleUnfriendClick} variant=\"outlined\">\n        <Typography variant=\"caption\">Unfriend</Typography>\n      </Button>\n    );\n    //authUser has requested\n  } else if (props.pendIn.includes(props.authUser)) {\n    return (\n      <Button disabled variant=\"outlined\">\n        <Typography variant=\"caption\">Requested</Typography>\n      </Button>\n    );\n    //they have requested authUser\n  } else if (props.pendOut.includes(props.authUser)) {\n    return (\n      <Button onClick={handleAcceptClick} variant=\"outlined\">\n        <Typography variant=\"caption\">Accept Friend Request</Typography>\n      </Button>\n    );\n    //if profile page is not authUser's\n  } else if (props.profileUser !== props.authUser) {\n    return (\n      <Button onClick={handleAddClick} variant=\"outlined\">\n        <Typography variant=\"caption\">Add Friend</Typography>\n      </Button>\n    );\n  }\n  return null;\n};\n\nexport default FriendButton;\n","import React, { useContext, useState } from \"react\";\n\n// import { UserContext } from \"../../../../UserContext\";\nimport { AccessContext } from \"../../../../AccessContext\";\nimport {\n  FormLabel,\n  Button,\n  Input,\n  Box,\n  Container,\n  makeStyles,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\n\nasync function handleSubmit(url, img, token, refresh) {\n  const imageData = new FormData();\n  imageData.append(\"img\", img);\n\n  console.log(img);\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    mode: \"cors\",\n    credentials: \"include\",\n    headers: {\n      // \"Content-Type\": \"multipart/form-data\"\n      Authorization: `Bearer ${token}`,\n    },\n    body: imageData,\n  });\n  response\n    .json()\n    .then((res) => {\n      console.log(res);\n      console.log(\"end handleSubmit\");\n      refresh.setRefresh(refresh.refreshInfo + 1)\n    })\n    .catch((err) => console.log(\"Error\", err));\n}\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"min-width\",\n  },\n});\n\nconst EditProfileDialog = (props) => {\n  let [selection, setSelection] = useState();\n  const { accessToken } = useContext(AccessContext);\n\n  const classes = useStyles();\n\n  const selectionChangeHandler = (image) => {\n    setSelection(image);\n    console.log(image);\n    console.log(\"end selectionChangeHandler\");\n    console.log(selection);\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant=\"h6\" align=\"center\">\n        Upload Image\n      </Typography>\n      <Divider />\n      <Box margin=\"2rem auto\">\n        <FormLabel form=\"file\" htmlFor=\"file\">\n          Profile Picture\n        </FormLabel>\n        <div>\n          <Input\n            onChange={(e) => {\n              selectionChangeHandler(e.target.files[0]);\n            }}\n            type=\"file\"\n            name=\"file\"\n          />\n        </div>\n        <Button\n          onClick={(e) => {\n            handleSubmit(\n              \"https://bookymcbookface.herokuapp.com/upload/s3ImgUpload\",\n              selection,\n              accessToken,\n              {setRefresh: props.setRefreshInfo, refreshInfo: props.refreshInfo}\n            );\n            props.handleClose();\n          }}\n        >\n          Upload Photo\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default EditProfileDialog;\n\n// http://localhost:5000/upload/s3ImgUpload\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  Box,\n  Typography,\n  makeStyles,\n  Container,\n  Avatar,\n  Dialog,\n  Button,\n} from \"@material-ui/core\";\n\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport CakeIcon from \"@material-ui/icons/Cake\";\nimport FriendButton from \"../../../shared/friendButton\";\nimport EditProfileDialog from \"./EditProfileDialog\";\n\nconst useStyles = makeStyles({\n  userCard: {\n    marginTop: \"1rem\",\n    display: \"flex\",\n  },\n  infoBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    width: \"100pc\",\n  },\n  fullName: {\n    alignSelf: \"center\",\n    textAlign: \"center\",\n  },\n  ageLocation: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n  avatarPic: {\n    height: \"160px\",\n    width: \"160px\",\n  },\n  friendButton: {\n    alignSelf: \"center\",\n  },\n});\n\nconst UserCard = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleEditProfileOpen = () => {\n    setOpen(true);\n  };\n\n  const handleEditProfileClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Card elevation={10} className={classes.userCard}>\n        <Avatar\n          className={classes.avatarPic}\n          variant=\"rounded\"\n          src={props.profilePic}\n          alt={`${props.firstName} ${props.lastName}`}\n        />\n        <Box className={classes.infoBox}>\n          <Box className={classes.fullName}>\n            <Typography variant=\"h6\">\n              {props.firstName} {props.lastName}\n            </Typography>\n          </Box>\n          <Box\n            margin=\"auto\"\n            onClick={() => props.setRefreshInfo(props.refreshInfo + 1)}\n            className={classes.friendButton}\n          >\n            <FriendButton\n              authUser={props.authUser}\n              profileUser={props.profileUser}\n              current={props.friendsCurrent}\n              pendIn={props.friendsPendIn}\n              pendOut={props.friendsPendOut}\n            />\n          </Box>\n          {props.age && props.city && props.state ? (\n            <Box className={classes.ageLocation}>\n              <Typography variant=\"subtitle\">\n                {props.age}\n                <CakeIcon />\n              </Typography>\n              <Typography>\n                {props.city}, {props.state}\n                <RoomIcon />\n              </Typography>\n            </Box>\n          ) : null}\n          {props.authUser === props.profileUser ? (\n            <Box margin=\"auto\">\n              <Button\n                onClick={() => handleEditProfileOpen()}\n                variant=\"contained\"\n              >\n                Edit Profile\n              </Button>\n              <Dialog open={open} onClose={handleEditProfileClose}>\n                <EditProfileDialog\n                  currAge={props.age}\n                  currCity={props.city}\n                  currState={props.state}\n                  handleClose={handleEditProfileClose}\n                  setRefreshInfo={props.setRefreshInfo}\n                  refreshInfo={props.refreshInfo}\n                />\n              </Dialog>\n            </Box>\n          ) : null}\n        </Box>\n      </Card>\n    </Container>\n  );\n};\n\nexport default UserCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Box, Typography } from \"@material-ui/core\";\nimport Timeline from \"../../shared/timeline\";\nimport UserCard from \"./components/userCard\";\nimport { AccessContext } from \"../../../AccessContext\";\nimport { UserContext } from \"../../../UserContext\";\n\nexport default function ProfileComponent() {\n  let { userurl } = useParams();\n\n  const { accessToken } = useContext(AccessContext);\n  const { user } = useContext(UserContext);\n  const [profileInfo, setProfileInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshInfo, setRefreshInfo] = useState(0)\n  const [deletedPosts, setDeletedPosts] = useState([])\n  const [likes, setLikes] = useState([])\n  const authId = user._id\n  \n  // Fetch the user information for the profile page\n  useEffect(() => {\n    async function getProfileInfo(url) {\n      const response = await fetch(url, {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      \n      response\n      .json()\n      .then((res) => {\n        setProfileInfo(res.result[0]);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    }\n    \n    getProfileInfo(`https://bookymcbookface.herokuapp.com/users/find/${userurl}`);\n    //useEffect dependencies\n  }, [userurl, accessToken, refreshInfo, deletedPosts, likes]);\n\n  if (profileInfo === undefined) {\n    return <Typography>Not found...</Typography>;\n  }\n  \n  if (isLoading) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  return (\n    <Container disableGutters maxWidth=\"xl\">\n      <UserCard\n        age={profileInfo.age}\n        firstName={profileInfo.first_name}\n        lastName={profileInfo.last_name}\n        city={profileInfo.city}\n        state={profileInfo.state}\n        profilePic={profileInfo.profileImgUrl}\n        // friendButton props\n        friendsCurrent={profileInfo.friends.current}\n        friendsPendIn={profileInfo.friends.pendIn}\n        friendsPendOut={profileInfo.friends.pendOut}\n        profileUser={profileInfo._id}\n        setRefreshInfo={setRefreshInfo}\n        refreshInfo={refreshInfo}\n        authUser={authId}\n      />\n      <Box>\n      {/* if not friends, hide timeline.-----> { profileInfo.friends.current.includes(user._id) || profileInfo._id === user._id ? : null*/}\n        <Timeline\n          profilePic={profileInfo.profileImgUrl}\n          posts={profileInfo.posts.map((post) => post)}\n          firstName={profileInfo.first_name}\n          lastName={profileInfo.last_name}\n          userId={profileInfo._id}\n          deletedPosts={deletedPosts}\n          setDeletedPosts={setDeletedPosts}\n          userurl={profileInfo.userurl}\n          likes={likes}\n          setLikes={setLikes}\n          refreshInfo={refreshInfo}\n          setRefreshInfo={setRefreshInfo}\n        />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Avatar,\n  makeStyles,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport FriendButton from \"../../../shared/friendButton\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  cardStyles: {\n    height: \"15rem\",\n    width: \"15rem\",\n  },\n\n  avatarPic: {\n    height: \"125px\",\n    width: \"125px\",\n    margin: \"1rem auto\",\n    cursor: \"pointer\",\n  },\n\n  friendButton: {\n    margin: \"auto\",\n    textAlign: \"center\"\n  }\n});\n\nconst UserIndexCard = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Card className={classes.cardStyles}>\n      <Box onClick={() => history.push(`/profile/${props.profileUrl}`)}>\n      <Avatar src={props.profilePic} className={classes.avatarPic} />\n      </Box>\n      <Typography align=\"center\">{`${props.first_name} ${props.last_name}`}</Typography>\n      <Box className={classes.friendButton} onClick={() => props.setPageUpdates(props.pageUpdates + 1)}>\n        <FriendButton\n          authUser={props.authUser}\n          profileUser={props.profileUser}\n          current={props.friendsCurrent}\n          pendIn={props.friendsPendIn}\n          pendOut={props.friendsPendOut}\n        />\n      </Box>\n    </Card>\n  );\n};\n\nexport default UserIndexCard;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles, Grid, Typography } from \"@material-ui/core\";\n\nimport { UserContext } from \"../../../UserContext\";\nimport { AccessContext } from \"../../../AccessContext\";\nimport UserIndexCard from \"./components/UserIndexCard\";\n\nconst useStyles = makeStyles({\n  UserIndexContainer: {},\n});\n\nconst UserIndex = (props) => {\n  const { user } = useContext(UserContext);\n  const { accessToken } = useContext(AccessContext);\n  const [users, setUsers] = useState([]);\n  const [pageUpdates, setPageUpdates] = useState(0);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const getAllUsers = async () => {\n      const response = await fetch(\"https://bookymcbookface.herokuapp.com/users\", {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      response.json().then((res) => {\n        console.log(res);\n        setUsers(res);\n      });\n    };\n\n    getAllUsers();\n  }, [accessToken, pageUpdates]);\n\n  if (users.length !== 0) {\n    return (\n      <Grid\n        sm=\"12\"\n        spacing=\"5\"\n        justify=\"center\"\n        container\n        className={classes.UserIndexContainer}\n      >\n        {users.map((selected, i) => {\n          if (selected._id !== user._id) {\n            return (\n              <Grid item>\n                <UserIndexCard\n                  first_name={selected.first_name}\n                  last_name={selected.last_name}\n                  pageUpdates={pageUpdates}\n                  setPageUpdates={setPageUpdates}\n                  authUser={user._id}\n                  profileUser={selected._id}\n                  profilePic={selected.profileImgUrl}\n                  friendsCurrent={selected.friends.current}\n                  friendsPendOut={selected.friends.pendOut}\n                  friendsPendIn={selected.friends.pendIn}\n                  profileUrl={selected.userurl}\n                />\n              </Grid>\n            );\n            \n          }\n          return null\n        })}\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid\n      sm=\"12\"\n      spacing=\"5\"\n      justify=\"center\"\n      container\n      className={classes.UserIndexContainer}\n    >\n      <Grid item>\n        <Typography variant=\"h4\">{\"Loading..\"}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default UserIndex;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport AuthLanding from \"./Components/Pages/Landing/AuthLanding\";\nimport Layout from \"./Components/shared/Layout\";\nimport DashboardComponent from \"./Components/Pages/Dashboard/dashboard\";\nimport ProfileComponent from \"./Components/Pages/Profile/Profile\";\n\nimport { UserContext } from \"./UserContext\";\nimport { AccessContext } from \"./AccessContext\";\nimport { Typography } from \"@material-ui/core\";\nimport UserIndex from \"./Components/Pages/UserIndex/UserIndex\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function checkLoggedIn() {\n      const response = await fetch(\"https://bookface-auth.herokuapp.com/userauth/curruser\", {\n        method: \"POST\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      response.json().then((data) => {\n        let currUser = data.user;\n        console.log(currUser);\n        setUser(currUser);\n        setAccessToken(data.token);\n        setIsLoading(false);\n      });\n    }\n    if (!document.cookie.includes(\"loggedIn=true\")) {\n      setIsLoading(false);\n    } else if (user == null) {\n      console.log(document.cookie.includes(\"loggedIn=true\"));\n      checkLoggedIn();\n    }\n  }, [user]);\n\n  if (isLoading) {\n    return <Typography>Loading...</Typography>;\n  }\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <AccessContext.Provider value={{ accessToken, setAccessToken }}>\n        <Layout />\n        {user && accessToken ? (\n          <Switch>\n            <Route\n              path=\"/auth\"\n              render={() => <h1>You're already logged in</h1>}\n            />\n            <Route path=\"/logout\" render={() => <h1>Logout route works</h1>} />\n            <Route\n              path=\"/profile/:userurl\"\n              exact\n              children={<ProfileComponent />}\n            />\n            <Route path=\"/dashboard\" children={<DashboardComponent />} />\n            <Route path=\"/userIndex\" children={<UserIndex />} />\n            <Route path=\"/\" exact render={() => <Redirect to=\"/dashboard\" />} />\n            <Route path=\"*\" render={() => <h1>404 Not Found</h1>} />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path=\"/\" children={<AuthLanding />} />\n            <Redirect to=\"/\" />\n          </Switch>\n        )}\n      </AccessContext.Provider>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}